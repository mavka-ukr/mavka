взяти визначення мавка;

секція мавка {
  дія предмет_тексту_виконати_метод_чародія_додати(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    якщо значення == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо додати пусто до тексту") як адреса<Предмет>);
    }
    якщо значення.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "До тексту можна додати лише текст") як адреса<Предмет>);
    }
    змінна предмет_тексту_значення = значення як адреса<ПредметТексту>;
    змінна розмір_значення_1 = предмет_тексту.значення.розмір;
    змінна розмір_значення_2 = предмет_тексту_значення.значення.розмір;
    змінна новий_розмір = розмір_значення_1 + розмір_значення_2;
    змінна нове_значення = виділити_памʼять<п8>(М, новий_розмір + 1);
    змінна позиція: позитивне = 0;
    поки позиція < розмір_значення_1 {
      нове_значення[позиція] = предмет_тексту.значення.дані[позиція];
      позиція += 1;
    }
    позиція = 0;
    поки позиція < розмір_значення_2 {
      нове_значення[розмір_значення_1 + позиція] = предмет_тексту_значення.значення.дані[позиція];
      позиція += 1;
    }
    нове_значення[новий_розмір] = 0;
    змінна новий_предмет_тексту = створити_предмет_тексту(М, т8 { новий_розмір, нове_значення });
    звільнити_памʼять(М, нове_значення);
    вернути новий_предмет_тексту як адреса<Предмет>;
  }

  дія предмет_тексту_виконати_метод_чародія_містить(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    якщо значення == пусто {
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    якщо значення.тип == М.предмет_структури_число {
      змінна предмет_числа_значення = значення як адреса<ПредметЧисла>;
      змінна символ = п8(предмет_числа_значення.значення);
      змінна позиція: позитивне = 0;
      поки позиція < предмет_тексту.значення.розмір {
        якщо предмет_тексту.значення.дані[позиція] == символ {
          вернути М.предмет_логічного_так як адреса<Предмет>;
        }
        позиція += 1;
      }
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    якщо значення.тип == М.предмет_структури_текст {
      змінна предмет_тексту_значення = значення як адреса<ПредметТексту>;
      якщо предмет_тексту.значення.розмір == 0 {
        якщо предмет_тексту_значення.значення.розмір == 0 {
          вернути М.предмет_логічного_так як адреса<Предмет>;
        }
      }
      змінна позиція: позитивне = 0;
      поки позиція < предмет_тексту.значення.розмір {
        змінна позиція_значення: позитивне = 0;
        поки позиція_значення < предмет_тексту_значення.значення.розмір {
          якщо предмет_тексту.значення.дані[позиція + позиція_значення] != предмет_тексту_значення.значення.дані[позиція_значення] {
            стрибнути далі;
          }
          позиція_значення += 1;
        }
        вернути М.предмет_логічного_так як адреса<Предмет>;
        далі:
        позиція += 1;
      }
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  дія предмет_тексту_виконати_метод_чародія_зображення(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту як адреса<Предмет>;
  }

  дія предмет_тексту_виконати_метод_чародія_текст(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту як адреса<Предмет>;
  }

  дія предмет_тексту_виконати_метод_чародія_байти(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна значення_тексту = предмет_тексту.значення;
    вернути створити_предмет_байтів(М, значення_тексту.розмір, значення_тексту.дані) як адреса<Предмет>;
  }

  дія предмет_тексту_виконати_метод_чародія_буфер(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна значення_тексту = предмет_тексту.значення;
    вернути створити_предмет_буфера(М, значення_тексту.розмір, значення_тексту.дані) як адреса<Предмет>;
  }

  дія предмет_тексту_виконати_метод_чародія_отримати_елемент(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, ключ: адреса<ПредметЧисла>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна позиція = позитивне(ключ.значення);
    якщо предмет_тексту.значення.розмір > позиція {
      вернути створити_предмет_числа(М, д64(предмет_тексту.значення.дані[позиція])) як адреса<Предмет>;
    }
    вернути пусто;
  }

  дія предмет_тексту_виконати_метод_чародія_перебір(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути створити_предмет_перебору_тексту(М, предмет_тексту) як адреса<Предмет>;
  }
}

секція мавка {
  дія записати_параметр_структури_текст_довжина(М: адреса<Машина>) {
    змінна параметр_довжина = створити_предмет_параметра(М, створити_назву(М, "довжина"), пусто);
    М.предмет_структури_текст.параметри.дані[0] = параметр_довжина;
  }

  дія рідна_дія_метода_чародія_містить(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_містить\" не для тексту") як адреса<Предмет>);
    }
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо не знайдено_аргумент_значення {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_містить(М, предмет_тексту, аргумент_значення, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_містить(М: адреса<Машина>) {
    змінна параметр_значення = створити_предмет_параметра(М, створити_назву(М, "значення"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_значення;
    змінна предмет_дії_метода_чародія_містить = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_містить"), 1, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_містить, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_містить"), предмет_дії_метода_чародія_містить);
  }

  дія рідна_дія_метода_чародія_додати(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_додати\" не для тексту") як адреса<Предмет>);
    }
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо не знайдено_аргумент_значення {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_додати(М, предмет_тексту, аргумент_значення, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_додати(М: адреса<Машина>) {
    змінна параметр_значення = створити_предмет_параметра(М, створити_назву(М, "значення"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_значення;
    змінна предмет_дії_метода_чародія_додати = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_додати"), 1, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_додати, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_додати"), предмет_дії_метода_чародія_додати);
  }

  дія рідна_дія_метода_чародія_зображення(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_зображення\" не для тексту") як адреса<Предмет>);
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_зображення(М, предмет_тексту, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_зображення(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_зображення = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_зображення"), 0, пусто, рідна_дія_метода_чародія_зображення, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_зображення"), предмет_дії_метода_чародія_зображення);
  }

  дія рідна_дія_метода_чародія_текст(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_текст\" не для тексту") як адреса<Предмет>);
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_текст(М, предмет_тексту, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_текст(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_текст = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_текст"), 0, пусто, рідна_дія_метода_чародія_текст, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_текст"), предмет_дії_метода_чародія_текст);
  }

  дія рідна_дія_метода_чародія_байти(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_байти\" не для тексту") як адреса<Предмет>);
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_байти(М, предмет_тексту, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_байти(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_байти = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_байти"), 0, пусто, рідна_дія_метода_чародія_байти, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_байти"), предмет_дії_метода_чародія_байти);
  }

  дія рідна_дія_метода_чародія_буфер(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_буфер\" не для тексту") як адреса<Предмет>);
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_буфер(М, предмет_тексту, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_буфер(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_буфер = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_буфер"), 0, пусто, рідна_дія_метода_чародія_буфер, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_буфер"), предмет_дії_метода_чародія_буфер);
  }

  дія рідна_дія_метода_чародія_отримати_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_отримати_елемент\" не для тексту") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_ключ = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "ключ"), аргумент_ключ::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_отримати_елемент(М, предмет_тексту, аргумент_ключ як адреса<ПредметЧисла>, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_отримати_елемент(М: адреса<Машина>) {
    змінна параметр_ключ = створити_предмет_параметра(М, створити_назву(М, "ключ"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_ключ;
    змінна предмет_дії_метода_чародія_отримати_елемент = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_отримати_елемент"), 1, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_отримати_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_отримати_елемент"), предмет_дії_метода_чародія_отримати_елемент);
  }

  дія рідна_дія_метода_чародія_перебір(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.тип != М.предмет_структури_текст {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_перебір\" не для тексту") як адреса<Предмет>);
    }
    змінна предмет_тексту = предмет_я як адреса<ПредметТексту>;
    вернути предмет_тексту_виконати_метод_чародія_перебір(М, предмет_тексту, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_текст_чародія_перебір(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_перебір = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_перебір"), 0, пусто, рідна_дія_метода_чародія_перебір, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_текст, створити_назву(М, "чародія_перебір"), предмет_дії_метода_чародія_перебір);
  }

  місцева дія заповнити_предмет_структури_текст(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_текст_довжина(М);

    // методи
    записати_метод_структури_текст_чародія_додати(М);
    записати_метод_структури_текст_чародія_містить(М);
    записати_метод_структури_текст_чародія_зображення(М);
    записати_метод_структури_текст_чародія_текст(М);
    записати_метод_структури_текст_чародія_байти(М);
    записати_метод_структури_текст_чародія_буфер(М);
    записати_метод_структури_текст_чародія_отримати_елемент(М);
    записати_метод_структури_текст_чародія_перебір(М);
  }

  місцева дія виконати_предмет_структури_текст(М: адреса<Машина>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо не знайдено_аргумент_значення {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    якщо не знайдено_аргумент_значення {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Пропущено аргумент \"значення\"") як адреса<Предмет>);
    }
    якщо аргумент_значення == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо отримати текст з пусто") як адреса<Предмет>);
    }
    вернути предмет_виконати_властивість(М, аргумент_значення, створити_назву(М, "чародія_текст"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія створити_предмет_тексту(М: адреса<Машина>, значення: т8): адреса<ПредметТексту> {
    змінна предмет_тексту = створити_предмет<ПредметТексту>(М, М.предмет_структури_текст);
    якщо виділити_копію_т8(М, значення, предмет_тексту.значення::адреса) == ні {
      ПОМЕРТИ(М, "Не вдалось виділити копію т8!");
      вернути пусто;
    }
    вернути предмет_тексту;
  }

  місцева дія створити_предмет_тексту_без_копіювання(М: адреса<Машина>, значення: т8): адреса<ПредметТексту> {
    змінна предмет_тексту = створити_предмет<ПредметТексту>(М, М.предмет_структури_текст);
    предмет_тексту.значення = значення;
    вернути предмет_тексту;
  }

  місцева дія предмет_тексту_виконати(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_виконати"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_тексту_отримати_властивість(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, створити_назву(М, "довжина")) {
      вернути створити_предмет_числа(М, д64(предмет_тексту.значення.розмір)) як адреса<Предмет>;
    }
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_тексту.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  місцева дія предмет_тексту_змінити_властивість(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути пусто;
  }

  місцева дія предмет_тексту_видалити_властивість(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  місцева дія предмет_тексту_виконати_властивість(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна предмет_властивості = предмет_тексту_отримати_властивість(М, предмет_тексту, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета тексту \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      змінна предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_тексту як адреса<Предмет>, кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_тексту_додати(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_метод_чародія_додати(М, предмет_тексту, аргумент, місцезнаходження);
  }

  місцева дія предмет_тексту_відняти(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_помножити(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_поділити(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_остача(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_неповна_частка(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_степінь(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_зсунути_вліво(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_зсунути_вправо(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_зсунути_вправо_2(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_двійкове_і(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_двійкове_або(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_двійкове_виключне_або(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_двійкове_заперечення(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_двійкове_заперечення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_менше(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_більше(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_містить(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_метод_чародія_містить(М, предмет_тексту, аргумент, місцезнаходження);
  }

  місцева дія предмет_тексту_числова_негація(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_числова_негація"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_отримати_число(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_число"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_збільшити(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_збільшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_зменшити(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_зменшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_зображення(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту як адреса<Предмет>;
  }

  місцева дія предмет_тексту_текст(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту як адреса<Предмет>;
  }

  місцева дія предмет_тексту_отримати_байти(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_метод_чародія_байти(М, предмет_тексту, місцезнаходження);
  }

  місцева дія предмет_тексту_отримати_буфер(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_метод_чародія_буфер(М, предмет_тексту, місцезнаходження);
  }

  місцева дія предмет_тексту_отримати_елемент(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    якщо ключ == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента з тексту має бути числом") як адреса<Предмет>);
    }
    якщо ключ.тип != М.предмет_структури_число {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента з тексту має бути числом") як адреса<Предмет>);
    }
    вернути предмет_тексту_виконати_метод_чародія_отримати_елемент(М, предмет_тексту, ключ як адреса<ПредметЧисла>, місцезнаходження);
  }

  місцева дія предмет_тексту_змінити_елемент(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_змінити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_видалити_елемент(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_тексту_отримати_перебір(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_тексту_виконати_метод_чародія_перебір(М, предмет_тексту, місцезнаходження);
  }

  місцева дія предмет_тексту_отримати_діапазон(М: адреса<Машина>, предмет_тексту: адреса<ПредметТексту>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    змінна результат = предмет_тексту_виконати_властивість(М, предмет_тексту, створити_назву(М, "чародія_діапазон"), 2, аргументи, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}