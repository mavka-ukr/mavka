взяти визначення мавка;

секція мавка {
}

секція мавка {
  дія записати_параметр_структури_Розширення_значення(М: адреса<Машина>) {
    змінна параметр_значення = створити_предмет_параметра(М, назва(М, "значення"), пусто, пусто);
    М.предмет_структури_Розширення.параметри.дані[0] = параметр_значення;
  }

  зовнішня дія заповнити_предмет_структури_Розширення(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_Розширення_значення(М);

    // методи
  }

  зовнішня дія створити_предмет_розширення(М: адреса<Машина>, Р: невідома_адреса, значення: адреса<Предмет>, дія_перед_знищенням: (М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>) -> ніщо, притримувач: адреса<Накопичувач<адреса<Предмет>>>): адреса<ПредметРозширення> {
    змінна предмет_розширення = створити_предмет<ПредметРозширення>(М, М.предмет_структури_Розширення);
    предмет_розширення.Р = Р;
    предмет_розширення.значення = значення;
    предмет_розширення.дія_перед_знищенням = дія_перед_знищенням;
    предмет_розширення.притримувач = притримувач;
    вернути предмет_розширення;
  }

  зовнішня дія предмет_розширення_виконати(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_виконати"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_розширення_отримати_властивість(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, створити_назву(М, "значення")) {
      вернути предмет_розширення.значення;
    }
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_розширення.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  зовнішня дія предмет_розширення_змінити_властивість(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  зовнішня дія предмет_розширення_видалити_властивість(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  зовнішня дія предмет_розширення_виконати_властивість(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна предмет_властивості = предмет_розширення_отримати_властивість(М, предмет_розширення, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета розширення \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      змінна предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_розширення як адреса<Предмет>, кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_розширення_додати(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_додати"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_відняти(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_помножити(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_поділити(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_остача(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_неповна_частка(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_степінь(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_зсунути_вліво(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_зсунути_вправо(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_зсунути_вправо_2(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_двійкове_і(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_двійкове_або(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_двійкове_виключне_або(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_двійкове_заперечення(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_двійкове_заперечення"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_менше(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_більше(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_містить(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_містить"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_числова_негація(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_числова_негація"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_отримати_число(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_число"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_збільшити(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_збільшити"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_зменшити(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_зменшити"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_зображення(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_зображення"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_текст(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_текст"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_юнікод(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_юнікод"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_отримати_байти(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_байти"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_отримати_елемент(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_отримати_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_змінити_елемент(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_змінити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_видалити_елемент(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_отримати_перебір(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_перебір"), 0, пусто, пусто, місцезнаходження);
  }

  зовнішня дія предмет_розширення_отримати_діапазон(М: адреса<Машина>, предмет_розширення: адреса<ПредметРозширення>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    змінна результат = предмет_розширення_виконати_властивість(М, предмет_розширення, назва(М, "чародія_діапазон"), 2, аргументи, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}