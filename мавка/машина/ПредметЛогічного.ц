взяти визначення мавка;

секція мавка {
  дія предмет_логічного_виконати_метод_чародія_число(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_логічного.значення == позитивне(так) {
      вернути створити_предмет_числа(М, 1.0) як адреса<Предмет>;
    }
    вернути створити_предмет_числа(М, 0.0) як адреса<Предмет>;
  }

  дія предмет_логічного_виконати_метод_чародія_зображення(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_логічного.значення == позитивне(так) {
      вернути створити_предмет_тексту(М, "так") як адреса<Предмет>;
    }
    вернути створити_предмет_тексту(М, "ні") як адреса<Предмет>;
  }

  дія предмет_логічного_виконати_метод_чародія_текст(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_логічного.значення == позитивне(так) {
      вернути створити_предмет_тексту(М, "так") як адреса<Предмет>;
    }
    вернути створити_предмет_тексту(М, "ні") як адреса<Предмет>;
  }
}

секція мавка {
  дія рідна_дія_метода_чародія_число(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_логічне {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_число\" не для логічного") як адреса<Предмет>);
    }
    змінна предмет_логічного = предмет_я як адреса<ПредметЛогічного>;
    вернути предмет_логічного_виконати_метод_чародія_число(М, предмет_логічного, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_логічне_чародія_число(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_число = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_число"), 0, пусто, пусто, рідна_дія_метода_чародія_число, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_логічне, створити_назву(М, "чародія_число"), предмет_дії_метода_чародія_число);
  }

  дія рідна_дія_метода_чародія_зображення(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_логічне {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_зображення\" не для логічного") як адреса<Предмет>);
    }
    змінна предмет_логічного = предмет_я як адреса<ПредметЛогічного>;
    вернути предмет_логічного_виконати_метод_чародія_зображення(М, предмет_логічного, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_логічне_чародія_зображення(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_зображення = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_зображення"), 0, пусто, пусто, рідна_дія_метода_чародія_зображення, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_логічне, створити_назву(М, "чародія_зображення"), предмет_дії_метода_чародія_зображення);
  }

  дія рідна_дія_метода_чародія_текст(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_логічне {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_текст\" не для логічного") як адреса<Предмет>);
    }
    змінна предмет_логічного = предмет_я як адреса<ПредметЛогічного>;
    вернути предмет_логічного_виконати_метод_чародія_текст(М, предмет_логічного, Місцезнаходження { пусто як адреса<ПредметШляху>, 0 });
  }

  дія записати_метод_структури_логічне_чародія_текст(М: адреса<Машина>) {
    змінна предмет_дії_метода_чародія_текст = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_текст"), 0, пусто, пусто, рідна_дія_метода_чародія_текст, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_логічне, створити_назву(М, "чародія_текст"), предмет_дії_метода_чародія_текст);
  }

  місцева дія заповнити_предмет_структури_логічне(М: адреса<Машина>) {
    // методи
    записати_метод_структури_логічне_чародія_число(М);
    записати_метод_структури_логічне_чародія_зображення(М);
    записати_метод_структури_логічне_чародія_текст(М);
  }

  місцева дія виконати_предмет_структури_логічне(М: адреса<Машина>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо не знайдено_аргумент_значення {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    якщо перевірити_чи_предмет_виражається_логічним_так(М, аргумент_значення) {
      вернути М.предмет_логічного_так як адреса<Предмет>;
    }
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  місцева дія створити_предмет_логічного(М: адреса<Машина>, значення: логічне): адреса<ПредметЛогічного> {
    змінна предмет_логічного = створити_предмет<ПредметЛогічного>(М, М.предмет_структури_логічне);
    предмет_логічного.значення = позитивне(значення);
    вернути предмет_логічного;
  }

  місцева дія предмет_логічного_виконати(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_виконати"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_логічного_отримати_властивість(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_логічного.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  місцева дія предмет_логічного_змінити_властивість(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  місцева дія предмет_логічного_видалити_властивість(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  місцева дія предмет_логічного_виконати_властивість(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна предмет_властивості = предмет_логічного_отримати_властивість(М, предмет_логічного, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета логічного \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      змінна предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_логічного як адреса<Предмет>, кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_логічного_додати(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_додати"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_відняти(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_помножити(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_поділити(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_остача(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_неповна_частка(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_степінь(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_зсунути_вліво(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_зсунути_вправо(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_зсунути_вправо_2(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_двійкове_і(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_двійкове_або(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_двійкове_виключне_або(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_двійкове_заперечення(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_двійкове_заперечення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_менше(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_більше(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_містить(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_містить"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_числова_негація(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_числова_негація"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_отримати_число(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_метод_чародія_число(М, предмет_логічного, місцезнаходження);
  }

  місцева дія предмет_логічного_збільшити(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_збільшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_зменшити(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_зменшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_зображення(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_метод_чародія_зображення(М, предмет_логічного, місцезнаходження);
  }

  місцева дія предмет_логічного_текст(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_метод_чародія_текст(М, предмет_логічного, місцезнаходження);
  }

  місцева дія предмет_логічного_отримати_байти(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_байти"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_отримати_елемент(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_отримати_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_змінити_елемент(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_змінити_елемент"), 2, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_видалити_елемент(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_отримати_перебір(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_перебір"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_логічного_отримати_діапазон(М: адреса<Машина>, предмет_логічного: адреса<ПредметЛогічного>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    змінна результат = предмет_логічного_виконати_властивість(М, предмет_логічного, створити_назву(М, "чародія_діапазон"), 2, аргументи, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}