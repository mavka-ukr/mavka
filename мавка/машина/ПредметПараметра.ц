взяти визначення мавка;

секція мавка {
}

секція мавка {
  дія записати_параметр_структури_Параметр_назва(М: адреса<Машина>) {
    змінна допустимі_структури_типу_параметра_назва = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_назва[0] = М.предмет_структури_текст;
    змінна тип_параметра_назва = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_назва });
    змінна параметр_назва = створити_предмет_параметра(М, створити_назву(М, "назва"), тип_параметра_назва, пусто);
    М.предмет_структури_Параметр.параметри.дані[0] = параметр_назва;
  }

  дія записати_параметр_структури_Параметр_тип(М: адреса<Машина>) {
    змінна допустимі_структури_типу_параметра_тип = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_тип[0] = М.предмет_структури_Тип;
    змінна тип_параметра_тип = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_тип });
    змінна параметр_тип = створити_предмет_параметра(М, створити_назву(М, "тип"), тип_параметра_тип, пусто);
    М.предмет_структури_Параметр.параметри.дані[1] = параметр_тип;
  }

  дія записати_параметр_структури_Параметр_код_значення(М: адреса<Машина>) {
    змінна допустимі_структури_типу_параметра_код_значення = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_код_значення[0] = М.предмет_структури_Код;
    змінна тип_параметра_код_значення = створити_предмет_типу(М, так, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_код_значення });
    змінна параметр_код_значення = створити_предмет_параметра(М, створити_назву(М, "код_значення"), тип_параметра_код_значення, пусто);
    М.предмет_структури_Параметр.параметри.дані[2] = параметр_код_значення;
  }

  місцева дія заповнити_предмет_структури_Параметр(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_Параметр_назва(М);
    записати_параметр_структури_Параметр_тип(М);
    записати_параметр_структури_Параметр_код_значення(М);

    // методи
  }

  місцева дія створити_предмет_параметра(М: адреса<Машина>, назва: адреса<ПредметТексту>, тип_: адреса<ПредметТипу>, код_значення: адреса<ПредметКоду>): адреса<ПредметПараметра> {
    змінна предмет_параметра = створити_предмет<ПредметПараметра>(М, М.предмет_структури_Параметр);
    предмет_параметра.назва = назва;
    предмет_параметра.тип_ = тип_;
    предмет_параметра.код_значення = код_значення;
    вернути предмет_параметра;
  }

  місцева дія предмет_параметра_виконати(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_виконати"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_параметра_отримати_властивість(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, створити_назву(М, "назва")) {
      вернути предмет_параметра.назва як адреса<Предмет>;
    }
    якщо перевірити_чи_предмети_назви_рівні(М, назва, створити_назву(М, "тип")) {
      вернути предмет_параметра.тип_ як адреса<Предмет>;
    }
    якщо перевірити_чи_предмети_назви_рівні(М, назва, створити_назву(М, "код_значення")) {
      вернути предмет_параметра.код_значення як адреса<Предмет>;
    }
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_параметра.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  місцева дія предмет_параметра_змінити_властивість(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  місцева дія предмет_параметра_видалити_властивість(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  місцева дія предмет_параметра_виконати_властивість(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна предмет_властивості = предмет_параметра_отримати_властивість(М, предмет_параметра, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета параметра \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      змінна предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_параметра як адреса<Предмет>, кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_параметра_додати(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_додати"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_відняти(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_помножити(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_поділити(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_остача(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_неповна_частка(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_степінь(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_зсунути_вліво(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_зсунути_вправо(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_зсунути_вправо_2(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_двійкове_і(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_двійкове_або(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_двійкове_виключне_або(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_двійкове_заперечення(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_двійкове_заперечення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_менше(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_більше(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_містить(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_містить"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_числова_негація(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_числова_негація"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_отримати_число(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_число"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_збільшити(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_збільшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_зменшити(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_зменшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_зображення(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_зображення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_текст(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_текст"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_юнікод(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_юнікод"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_отримати_байти(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_байти"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_отримати_елемент(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_отримати_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_змінити_елемент(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_змінити_елемент"), 2, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_видалити_елемент(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_отримати_перебір(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_перебір"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_параметра_отримати_діапазон(М: адреса<Машина>, предмет_параметра: адреса<ПредметПараметра>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    змінна результат = предмет_параметра_виконати_властивість(М, предмет_параметра, створити_назву(М, "чародія_діапазон"), 2, аргументи, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}