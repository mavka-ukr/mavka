взяти визначення мавка;

секція мавка {
  дія предмет_словника_виконати_метод_чародія_містить(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна елемент = ЕлементРеєстру<адреса<Предмет>, адреса<Предмет>> { пусто, пусто };
    якщо знайти_в_реєстрі<адреса<Предмет>, адреса<Предмет>>(М, предмет_словника.елементи::адреса, ключ, елемент::адреса) {
      вернути М.предмет_логічного_так як адреса<Предмет>;
    }
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  дія предмет_словника_виконати_метод_чародія_отримати_елемент(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна елемент = ЕлементРеєстру<адреса<Предмет>, адреса<Предмет>> { пусто, пусто };
    якщо знайти_в_реєстрі<адреса<Предмет>, адреса<Предмет>>(М, предмет_словника.елементи::адреса, ключ, елемент::адреса) {
      вернути елемент.значення;
    }
    вернути пусто;
  }

  дія предмет_словника_виконати_метод_чародія_змінити_елемент(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінити_в_реєстрі<адреса<Предмет>, адреса<Предмет>>(М, предмет_словника.елементи::адреса, ключ, значення);
    вернути пусто;
  }

  дія предмет_словника_виконати_метод_чародія_видалити_елемент(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    якщо видалити_з_реєстру<адреса<Предмет>, адреса<Предмет>>(М, предмет_словника.елементи::адреса, ключ) {
      вернути М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
  }
}

секція мавка {
  дія предмет_словника_виконати_метод_ключі(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна притримувач = покласти_притримувач(М);
    змінна новий_список = створити_предмет_списку(М, предмет_словника.елементи.елементи.розмір);
    притримати(М, притримувач, новий_список як адреса<Предмет>);
    змінна п: натуральне = 0;
    поки п < предмет_словника.елементи.елементи.розмір {
      змінна елемент = предмет_словника.елементи.елементи.дані[п];
      покласти_в_накопичувач<адреса<Предмет>>(М, новий_список.елементи::адреса, елемент.ключ);
      п += 1;
    }
    забрати_притримувач(М);
    вернути новий_список як адреса<Предмет>;
  }

  дія предмет_словника_виконати_метод_значення(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна притримувач = покласти_притримувач(М);
    змінна новий_список = створити_предмет_списку(М, предмет_словника.елементи.елементи.розмір);
    притримати(М, притримувач, новий_список як адреса<Предмет>);
    змінна п: натуральне = 0;
    поки п < предмет_словника.елементи.елементи.розмір {
      змінна елемент = предмет_словника.елементи.елементи.дані[п];
      покласти_в_накопичувач<адреса<Предмет>>(М, новий_список.елементи::адреса, елемент.значення);
      п += 1;
    }
    забрати_притримувач(М);
    вернути новий_список як адреса<Предмет>;
  }
}

секція мавка {
  дія записати_параметр_структури_словник_розмір(М: адреса<Машина>) {
    змінна параметр_розмір = створити_предмет_параметра(М, створити_назву(М, "розмір"), пусто);
    М.предмет_структури_словник.параметри.дані[0] = параметр_розмір;
  }

  дія рідна_дія_метода_чародія_містить(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.с != М.предмет_структури_словник {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_містить\" не для словника") як адреса<Предмет>);
    }
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо не знайдено_аргумент_значення {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    змінна предмет_словника = предмет_я як адреса<ПредметСловника>;
    вернути предмет_словника_виконати_метод_чародія_містить(М, предмет_словника, аргумент_значення, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 });
  }

  дія записати_метод_структури_словник_чародія_містить(М: адреса<Машина>) {
    змінна параметр_значення = створити_предмет_параметра(М, створити_назву(М, "значення"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_значення;
    змінна предмет_дії_метода_чародія_містить = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_містить"), 1, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_містить, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_словник, створити_назву(М, "чародія_містить"), предмет_дії_метода_чародія_містить);
  }

  дія рідна_дія_метода_чародія_отримати_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.с != М.предмет_структури_словник {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_отримати_елемент\" не для словника") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_ключ = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "ключ"), аргумент_ключ::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
    }
    змінна предмет_словника = предмет_я як адреса<ПредметСловника>;
    вернути предмет_словника_виконати_метод_чародія_отримати_елемент(М, предмет_словника, аргумент_ключ, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 });
  }

  дія записати_метод_структури_словник_чародія_отримати_елемент(М: адреса<Машина>) {
    змінна параметр_ключ = створити_предмет_параметра(М, створити_назву(М, "ключ"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_ключ;
    змінна предмет_дії_метода_чародія_отримати_елемент = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_отримати_елемент"), 1, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_отримати_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_словник, створити_назву(М, "чародія_отримати_елемент"), предмет_дії_метода_чародія_отримати_елемент);
  }

  дія рідна_дія_метода_чародія_змінити_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.с != М.предмет_структури_словник {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_змінити_елемент\" не для словника") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_ключ = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "ключ"), аргумент_ключ::адреса);
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
      якщо кількість_аргументів > 1 {
        якщо не знайдено_аргумент_значення {
          аргумент_значення = аргументи[1];
          знайдено_аргумент_значення = так;
        }

      }
    }
    змінна предмет_словника = предмет_я як адреса<ПредметСловника>;
    вернути предмет_словника_виконати_метод_чародія_змінити_елемент(М, предмет_словника, аргумент_ключ, аргумент_значення, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 });
  }

  дія записати_метод_структури_словник_чародія_змінити_елемент(М: адреса<Машина>) {
    змінна параметр_ключ = створити_предмет_параметра(М, створити_назву(М, "ключ"), пусто);
    змінна параметр_значення = створити_предмет_параметра(М, створити_назву(М, "значення"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 2);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_ключ;
    дані_параметрів_дії_дізнатись_структуру[1] = параметр_значення;
    змінна предмет_дії_метода_чародія_змінити_елемент = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_змінити_елемент"), 2, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_змінити_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_словник, створити_назву(М, "чародія_змінити_елемент"), предмет_дії_метода_чародія_змінити_елемент);
  }

  дія рідна_дія_метода_чародія_видалити_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.с != М.предмет_структури_словник {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_видалити_елемент\" не для словника") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    якщо іменовані_аргументи != пусто {
      знайдено_аргумент_ключ = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "ключ"), аргумент_ключ::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
    }
    змінна предмет_словника = предмет_я як адреса<ПредметСловника>;
    вернути предмет_словника_виконати_метод_чародія_видалити_елемент(М, предмет_словника, аргумент_ключ, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 });
  }

  дія записати_метод_структури_словник_чародія_видалити_елемент(М: адреса<Машина>) {
    змінна параметр_ключ = створити_предмет_параметра(М, створити_назву(М, "ключ"), пусто);
    змінна дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_ключ;
    змінна предмет_дії_метода_чародія_видалити_елемент = створити_предмет_рідної_дії(М, створити_назву(М, "чародія_видалити_елемент"), 1, дані_параметрів_дії_дізнатись_структуру, рідна_дія_метода_чародія_видалити_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_словник, створити_назву(М, "чародія_видалити_елемент"), предмет_дії_метода_чародія_видалити_елемент);
  }

  дія рідна_дія_метода_ключі(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.с != М.предмет_структури_словник {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"ключі\" не для словника") як адреса<Предмет>);
    }
    змінна предмет_словника = предмет_я як адреса<ПредметСловника>;
    вернути предмет_словника_виконати_метод_ключі(М, предмет_словника, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 });
  }

  дія записати_метод_структури_словник_ключі(М: адреса<Машина>) {
    змінна предмет_дії_метода_ключі = створити_предмет_рідної_дії(М, створити_назву(М, "ключі"), 0, пусто, рідна_дія_метода_ключі, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_словник, створити_назву(М, "ключі"), предмет_дії_метода_ключі);
  }

  дія рідна_дія_метода_значення(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
    якщо предмет_я.с != М.предмет_структури_словник {
      вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 }, створити_предмет_тексту(М, "Неможливо виконати дію \"значення\" не для словника") як адреса<Предмет>);
    }
    змінна предмет_словника = предмет_я як адреса<ПредметСловника>;
    вернути предмет_словника_виконати_метод_значення(М, предмет_словника, Місцезнаходження { пусто як адреса<ПредметБайтів>, 0 });
  }

  дія записати_метод_структури_словник_значення(М: адреса<Машина>) {
    змінна предмет_дії_метода_значення = створити_предмет_рідної_дії(М, створити_назву(М, "значення"), 0, пусто, рідна_дія_метода_значення, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_словник, створити_назву(М, "значення"), предмет_дії_метода_значення);
  }

  місцева дія заповнити_предмет_структури_словник(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_словник_розмір(М);

    // методи
    записати_метод_структури_словник_чародія_містить(М);
    записати_метод_структури_словник_чародія_отримати_елемент(М);
    записати_метод_структури_словник_чародія_змінити_елемент(М);
    записати_метод_структури_словник_чародія_видалити_елемент(М);
    записати_метод_структури_словник_ключі(М);
    записати_метод_структури_словник_значення(М);
  }

  місцева дія створити_предмет_словника(М: адреса<Машина>, вмісткість: натуральне): адреса<ПредметСловника> {
    змінна предмет_словника = створити_предмет<ПредметСловника>(М, М.предмет_структури_словник);
    предмет_словника.елементи = зробити_реєстр_з_даними<адреса<Предмет>, адреса<Предмет>, Машина>(М, М, перевірити_чи_предмети_рівні);
    вернути предмет_словника;
  }

  місцева дія предмет_словника_виконати(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, предмет_я: адреса<Предмет>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_виконати"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_словника_отримати_властивість(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, створити_назву(М, "розмір")) {
      вернути створити_предмет_числа(М, р64(предмет_словника.елементи.елементи.розмір)) як адреса<Предмет>;
    }
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_словника.с, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  місцева дія предмет_словника_змінити_властивість(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути пусто;
  }

  місцева дія предмет_словника_видалити_властивість(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  місцева дія предмет_словника_виконати_властивість(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, назва: адреса<ПредметТексту>, кількість_аргументів: натуральне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна предмет_властивості = предмет_словника_отримати_властивість(М, предмет_словника, назва, місцезнаходження);
    якщо М.стан_падіння {
      вернути пусто;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<н8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета словника \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      змінна предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_словника як адреса<Предмет>, кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_словника_додати(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_додати"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_відняти(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_помножити(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_поділити(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_остача(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_неповна_частка(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_степінь(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_зсунути_вліво(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_зсунути_вправо(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_зсунути_вправо_2(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_двійкове_і(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_двійкове_або(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_двійкове_виключне_або(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_двійкове_заперечення(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_двійкове_заперечення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_менше(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_більше(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_містить(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_метод_чародія_містить(М, предмет_словника, аргумент, місцезнаходження);
  }

  місцева дія предмет_словника_числова_негація(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_числова_негація"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_отримати_число(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_число"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_збільшити(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_збільшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_зменшити(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_зменшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_зображення(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_зображення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_текст(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_текст"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_отримати_байти(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_байти"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_отримати_елемент(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_метод_чародія_отримати_елемент(М, предмет_словника, ключ, місцезнаходження);
  }

  місцева дія предмет_словника_змінити_елемент(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_метод_чародія_змінити_елемент(М, предмет_словника, ключ, значення, місцезнаходження);
  }

  місцева дія предмет_словника_видалити_елемент(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_метод_чародія_видалити_елемент(М, предмет_словника, ключ, місцезнаходження);
  }

  місцева дія предмет_словника_отримати_перебір(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_перебір"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_словника_отримати_діапазон(М: адреса<Машина>, предмет_словника: адреса<ПредметСловника>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    змінна результат = предмет_словника_виконати_властивість(М, предмет_словника, створити_назву(М, "чародія_діапазон"), 2, аргументи, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}