взяти визначення мавка;

секція мавка {
}

секція мавка {
  дія записати_параметр_структури_Шлях_байти(М: адреса<Машина>) {
    змінна допустимі_структури_типу_параметра_байти = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_байти[0] = М.предмет_структури_байти;
    змінна тип_параметра_байти = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_байти });
    змінна параметр_байти = створити_предмет_параметра(М, створити_назву(М, "байти"), тип_параметра_байти, пусто);
    М.предмет_структури_Шлях.параметри.дані[0] = параметр_байти;
  }

  місцева дія заповнити_предмет_структури_Шлях(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_Шлях_байти(М);

    // методи
  }

  місцева дія створити_предмет_шляху(М: адреса<Машина>, байти: адреса<ПредметБайтів>): адреса<ПредметШляху> {
    змінна предмет_шляху = створити_предмет<ПредметШляху>(М, М.предмет_структури_Шлях);
    // потім: перевірити вірність байтів шляху
    предмет_шляху.байти = байти;
    вернути предмет_шляху;
  }

  місцева дія предмет_шляху_виконати(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_виконати"), кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_шляху_отримати_властивість(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути пусто;
  }

  місцева дія предмет_шляху_змінити_властивість(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути пусто;
  }

  місцева дія предмет_шляху_видалити_властивість(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  місцева дія предмет_шляху_виконати_властивість(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна предмет_властивості = предмет_шляху_отримати_властивість(М, предмет_шляху, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета шляху \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      змінна предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_шляху як адреса<Предмет>, кількість_аргументів, аргументи, іменовані_аргументи, місцезнаходження);
  }

  місцева дія предмет_шляху_додати(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_додати"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_відняти(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_помножити(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_поділити(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_остача(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_неповна_частка(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_степінь(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_зсунути_вліво(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_зсунути_вправо(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_зсунути_вправо_2(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_двійкове_і(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_двійкове_або(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_двійкове_виключне_або(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_двійкове_заперечення(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_двійкове_заперечення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_менше(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_більше(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_містить(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_містить"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_числова_негація(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_числова_негація"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_отримати_число(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_число"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_збільшити(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_збільшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_зменшити(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_зменшити"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_зображення(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_зображення"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_текст(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_текст"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_отримати_байти(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_байти"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_отримати_елемент(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_отримати_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_змінити_елемент(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_змінити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_видалити_елемент(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_отримати_перебір(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    вернути предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_перебір"), 0, пусто, пусто, місцезнаходження);
  }

  місцева дія предмет_шляху_отримати_діапазон(М: адреса<Машина>, предмет_шляху: адреса<ПредметШляху>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> ПредметАбоСтанПадіння<Предмет> {
    змінна аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    змінна результат = предмет_шляху_виконати_властивість(М, предмет_шляху, створити_назву(М, "чародія_діапазон"), 2, аргументи, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}