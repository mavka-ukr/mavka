взяти визначення МаМа;
взяти визначення мавка/бібліотека;
взяти визначення визначення/РМв1;

зовнішня дія mavka_load_shared_object_function_ptr_from_file(path: адреса<unsigned_char>, path_size: size_t, name: адреса<unsigned_char>): адреса;

секція РМв1 {
  секція втілення {
    дія виділити_падіння(Р: адреса<Розширення>): адреса<Падіння> {
      ціль падіння = мавка::виділити<Падіння>(Р.обчислювач як адреса<мавка::Обчислювач>);
      падіння.місцезнаходження = пусто;
      падіння.розмір_історії = 0;
      падіння.історія = пусто;
      вернути падіння;
    }

    дія звільнити_падіння(Р: адреса<Розширення>, падіння: адреса<Падіння>) {
      // ...
    }

    // УВАГА: ця дія звільняє передане падіння мавки з памʼяті!
    дія перетворити_падіння_мавки_в_падіння_РМв1(Р: адреса<Розширення>, падіння_мавки: адреса<мавка::Падіння>): адреса<Падіння> {
      ціль падіння = мавка::виділити<Падіння>(Р.обчислювач як адреса<мавка::Обчислювач>);
      якщо падіння_мавки.місцезнаходження == пусто {
        падіння.місцезнаходження = пусто;
      } інакше {
        ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
        падіння.місцезнаходження = мавка::виділити<МісцезнаходженняПадіння>(Р.обчислювач як адреса<мавка::Обчислювач>);
        якщо мавка::виділити_копію_ю8_цілі(обчислювач, падіння_мавки.місцезнаходження.шлях_до_файлу, падіння.місцезнаходження.шлях_до_файлу::адреса) == ні {
          мавка::надрукувати_ю8_і_вийти_з_процесу(обчислювач, ю8":(");
        }
        падіння.місцезнаходження.рядок = падіння_мавки.місцезнаходження.рядок;
      }
      падіння.розмір_історії = падіння_мавки.розмір_історії;
      падіння.історія = мавка::виділити_памʼять<ЕлементІсторіїПадіння>(Р.обчислювач як адреса<мавка::Обчислювач>, падіння_мавки.розмір_історії);
      змінна ціль п: позитивне = 0;
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      поки п < падіння_мавки.розмір_історії {
        якщо мавка::виділити_копію_ю8_цілі(обчислювач, падіння_мавки.історія[п].шлях_до_файлу, падіння.історія[п].шлях_до_файлу::адреса) == ні {
          мавка::надрукувати_ю8_і_вийти_з_процесу(обчислювач, ю8":(");
        }
        падіння.історія[п].рядок = падіння_мавки.історія[п].рядок;
        падіння.історія[п].назва_дії = падіння_мавки.історія[п].назва_дії як адреса<Назва>;
        п += 1;
      }
      мавка::звільнити_падіння(Р.обчислювач як адреса<мавка::Обчислювач>, падіння_мавки);
      вернути падіння;
    }

    // УВАГА: ця дія звільняє падіння мавки з переданого результату з памʼяті!
    дія перетворити_результат_мавки_в_результат_РМв1(Р: адреса<Розширення>, результат_мавки: мавка::Результат): Результат {
      якщо результат_мавки.падіння == пусто {
        вернути Результат {
          падіння = пусто,
          значення = результат_мавки.значення як адреса<Предмет>
        };
      } інакше {
        вернути Результат {
          падіння = перетворити_падіння_мавки_в_падіння_РМв1(Р, результат_мавки.падіння),
          значення = результат_мавки.значення як адреса<Предмет>
        };
      }
    }

    // УВАГА: ця дія звільняє передане падіння РМв1 з памʼяті!
    дія перетворити_падіння_РМв1_в_падіння_мавки(Р: адреса<Розширення>, падіння_РМв1: адреса<Падіння>): адреса<мавка::Падіння> {
      ціль падіння = мавка::виділити<мавка::Падіння>(Р.обчислювач як адреса<мавка::Обчислювач>);
      якщо падіння_РМв1.місцезнаходження == пусто {
        падіння.місцезнаходження = пусто;
      } інакше {
        ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
        падіння.місцезнаходження = мавка::виділити<мавка::МісцезнаходженняПадіння>(Р.обчислювач як адреса<мавка::Обчислювач>);
        якщо мавка::виділити_копію_ю8_цілі(обчислювач, падіння_РМв1.місцезнаходження.шлях_до_файлу, падіння.місцезнаходження.шлях_до_файлу::адреса) == ні {
          мавка::надрукувати_ю8_і_вийти_з_процесу(обчислювач, ю8":(");
        }
        падіння.місцезнаходження.рядок = падіння_РМв1.місцезнаходження.рядок;
      }
      падіння.розмір_історії = падіння_РМв1.розмір_історії;
      падіння.історія = мавка::виділити_памʼять<мавка::ЕлементІсторіїПадіння>(Р.обчислювач як адреса<мавка::Обчислювач>, падіння_РМв1.розмір_історії);
      змінна ціль п: позитивне = 0;
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      поки п < падіння_РМв1.розмір_історії {
        якщо мавка::виділити_копію_ю8_цілі(обчислювач, падіння_РМв1.історія[п].шлях_до_файлу, падіння.історія[п].шлях_до_файлу::адреса) == ні {
          мавка::надрукувати_ю8_і_вийти_з_процесу(обчислювач, ю8":(");
        }
        падіння.історія[п].рядок = падіння_РМв1.історія[п].рядок;
        падіння.історія[п].назва_дії = падіння_РМв1.історія[п].назва_дії як адреса<мавка::Назва>;
        п += 1;
      }
      звільнити_падіння(Р, падіння_РМв1);
      вернути падіння;
    }

    // УВАГА: ця дія звільняє падіння РМв1 з переданого результату з памʼяті!
    дія перетворити_результат_РМв1_в_результат_мавки(Р: адреса<Розширення>, результат_РМв1: Результат): мавка::Результат {
      якщо результат_РМв1.падіння == пусто {
        вернути мавка::Результат {
          падіння = пусто,
          значення = результат_РМв1.значення як адреса<мавка::Предмет>
        };
      } інакше {
        вернути мавка::Результат {
          падіння = перетворити_падіння_РМв1_в_падіння_мавки(Р, результат_РМв1.падіння),
          значення = результат_РМв1.значення як адреса<мавка::Предмет>
        };
      }
    }

    дія РМв1_надрукувати_ю8(Р: адреса<Розширення>, значення: ю8) {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      мавка::надрукувати_ю8(обчислювач, значення);
    }

    дія РМв1_надрукувати_предмет(Р: адреса<Розширення>, предмет: адреса<Предмет>, глибина: позитивне) {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      мавка::надрукувати_предмет(обчислювач, предмет як адреса<мавка::Предмет>);
    }

    дія РМв1_взяти_файл_ю8(Р: адреса<Розширення>, назва_модуля: адреса<Назва>, шлях_до_файлу: ю8): Результат {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      ціль результат_мавки = мавка::взяти_файл_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, назва_модуля як адреса<мавка::Назва>, шлях_до_файлу);
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, результат_мавки);
    }

    дія РМв1_зберегти_предмет(Р: адреса<Розширення>, предмет: адреса<Предмет>) {
      мавка::зберегти_предмет(Р.обчислювач як адреса<мавка::Обчислювач>, предмет як адреса<мавка::Предмет>);
    }

    дія РМв1_видалити_збережений_предмет(Р: адреса<Розширення>) {
      мавка::видалити_збережений_предмет(Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_назва_з_ю8(Р: адреса<Розширення>, значення: ю8): адреса<Назва> {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      ціль назва = мавка::назва_з_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, значення) як адреса<Назва>;
      вернути назва;
    }

    структура ДаніНативноїДії {
      Р: адреса<Розширення>;
      нативна_дія: НативнаДія;
      дані: адреса;
      відклик_перед_звільненням: ВідкликПередЗвільненнямПредметаНативноїДії;
    }

    дія нативна_дія_нативної_дії(предмет_нативної_дії: адреса<мавка::Предмет>, обчислювач: адреса<мавка::Обчислювач>, предмет_я: адреса<мавка::Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<мавка::Предмет>>, іменовані_аргументи: адреса<мавка::ІменованіАргументи>, дані: адреса): мавка::Результат {
      ціль дані_нативної_дії = дані як адреса<ДаніНативноїДії>;
      ціль результат_РМв1 = дані_нативної_дії.нативна_дія(
        предмет_нативної_дії як адреса<Предмет>,
        дані_нативної_дії.Р,
        предмет_я як адреса<Предмет>,
        кількість_аргументів,
        аргументи як памʼять<адреса<Предмет>>,
        іменовані_аргументи як адреса<ІменованіАргументи>,
        дані_нативної_дії.дані
      );
      вернути перетворити_результат_РМв1_в_результат_мавки(дані_нативної_дії.Р, результат_РМв1);
    }

    дія відклик_перед_звільненням_нативної_дії(предмет_нативної_дії: адреса<мавка::Предмет>, обчислювач: адреса<мавка::Обчислювач>, дані: адреса) {
      ціль дані_нативної_дії = дані як адреса<ДаніНативноїДії>;
      якщо дані_нативної_дії.відклик_перед_звільненням != пусто {
        дані_нативної_дії.відклик_перед_звільненням(предмет_нативної_дії як адреса<Предмет>, дані_нативної_дії.Р, дані_нативної_дії.дані);
      }
      мавка::звільнити(дані_нативної_дії.Р.обчислювач як адреса<мавка::Обчислювач>, дані);
    }

    дія РМв1_створити_нативну_дію(Р: адреса<Розширення>, назва: адреса<Назва>, значення: НативнаДія, дані: адреса, відклик_перед_звільненням: ВідкликПередЗвільненнямПредметаНативноїДії): адреса<Предмет> {
      ціль дані_нативної_дії = мавка::виділити<ДаніНативноїДії>(Р.обчислювач як адреса<мавка::Обчислювач>);
      дані_нативної_дії.Р = Р;
      дані_нативної_дії.нативна_дія = значення;
      дані_нативної_дії.дані = дані;
      дані_нативної_дії.відклик_перед_звільненням = відклик_перед_звільненням;
      ціль предмет_нативної_дії = мавка::створити_нативну_дію(Р.обчислювач як адреса<мавка::Обчислювач>, назва як адреса<мавка::Назва>, нативна_дія_нативної_дії, дані_нативної_дії, відклик_перед_звільненням_нативної_дії);
      вернути предмет_нативної_дії як адреса<Предмет>;
    }

    дія РМв1_створити_число(Р: адреса<Розширення>, значення: д64): адреса<Предмет> {
      вернути мавка::створити_число(Р.обчислювач як адреса<мавка::Обчислювач>, значення) як адреса<Предмет>;
    }

    дія РМв1_створити_текст_з_ю8(Р: адреса<Розширення>, значення: ю8): адреса<Предмет> {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      ціль предмет_тексту = мавка::створити_текст_з_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, значення) як адреса<Предмет>;
      вернути предмет_тексту;
    }

    дія РМв1_створити_юнікод_з_ю8(Р: адреса<Розширення>, значення: ю8): адреса<Предмет> {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      ціль предмет_юнікоду = мавка::створити_юнікод_з_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, значення) як адреса<Предмет>;
      вернути пусто;
    }

    дія РМв1_створити_модуль(Р: адреса<Розширення>, назва: адреса<Назва>): адреса<Предмет> {
      вернути мавка::створити_модуль(Р.обчислювач як адреса<мавка::Обчислювач>, назва як адреса<мавка::Назва>) як адреса<Предмет>;
    }

    дія РМв1_створити_список(Р: адреса<Розширення>): адреса<Предмет> {
      вернути мавка::створити_список(Р.обчислювач як адреса<мавка::Обчислювач>) як адреса<Предмет>;
    }

    дія РМв1_створити_словник(Р: адреса<Розширення>): адреса<Предмет> {
      вернути мавка::створити_словник(Р.обчислювач як адреса<мавка::Обчислювач>) як адреса<Предмет>;
    }

    дія РМв1_створити_предмет(Р: адреса<Розширення>): адреса<Предмет> {
      вернути мавка::створити_предмет(Р.обчислювач як адреса<мавка::Обчислювач>) як адреса<Предмет>;
    }

    дія РМв1_предмет_виконати(предмет: адреса<Предмет>, Р: адреса<Розширення>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>): Результат {
      ціль результат_мавки = мавка::предмет_виконати(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        предмет_я як адреса<мавка::Предмет>,
        кількість_аргументів,
        аргументи як памʼять<адреса<мавка::Предмет>>,
        іменовані_аргументи як адреса<мавка::ІменованіАргументи>
      );
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, результат_мавки);
    }

    дія РМв1_предмет_отримати_властивість(предмет: адреса<Предмет>, Р: адреса<Розширення>, назва: адреса<Назва>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_отримати_властивість(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        назва як адреса<мавка::Назва>
      ));
    }

    дія РМв1_предмет_змінити_властивість(предмет: адреса<Предмет>, Р: адреса<Розширення>, назва: адреса<Назва>, значення: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_змінити_властивість(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        назва як адреса<мавка::Назва>,
        значення як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_видалити_властивість(предмет: адреса<Предмет>, Р: адреса<Розширення>, назва: адреса<Назва>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_видалити_властивість(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        назва як адреса<мавка::Назва>
      ));
    }

    дія РМв1_предмет_виконати_властивість(предмет: адреса<Предмет>, Р: адреса<Розширення>, назва: адреса<Назва>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>): Результат {
      ціль результат_мавки = мавка::предмет_виконати_властивість(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        назва як адреса<мавка::Назва>,
        кількість_аргументів,
        аргументи як памʼять<адреса<мавка::Предмет>>,
        іменовані_аргументи як адреса<мавка::ІменованіАргументи>
      );
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, результат_мавки);
    }

    дія РМв1_предмет_отримати_елемент(предмет: адреса<Предмет>, Р: адреса<Розширення>, ключ: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_отримати_елемент(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        ключ як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_змінити_елемент(предмет: адреса<Предмет>, Р: адреса<Розширення>, ключ: адреса<Предмет>, значення: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_змінити_елемент(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        ключ як адреса<мавка::Предмет>,
        значення як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_видалити_елемент(предмет: адреса<Предмет>, Р: адреса<Розширення>, ключ: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_видалити_елемент(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        ключ як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_отримати_перебір(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_отримати_перебір(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_предмет_додати(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_додати(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_відняти(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_відняти(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_помножити(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_помножити(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_поділити(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_поділити(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_остача(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_остача(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_неповна_частка(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_неповна_частка(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_степінь(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_степінь(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_вліво(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_вліво(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_вправо_зі_заповненням(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_вправо_зі_заповненням(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_двійкове_і(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_двійкове_і(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_двійкове_або(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_двійкове_або(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_двійкове_виключне_або(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_двійкове_виключне_або(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_двійкове_не(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_двійкове_не(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_предмет_більше(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_більше(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_менше(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_менше(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_рівно(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_рівно(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_містить(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_містить(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_є(предмет: адреса<Предмет>, Р: адреса<Розширення>, аргумент: адреса<Предмет>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_є(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>,
        аргумент як адреса<мавка::Предмет>
      ));
    }

    дія РМв1_предмет_відʼємне(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_відʼємне(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_предмет_числове(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_числове(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_предмет_заперечити(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_заперечити(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_предмет_збільшити(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_збільшити(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_предмет_зменшити(предмет: адреса<Предмет>, Р: адреса<Розширення>): Результат {
      вернути перетворити_результат_мавки_в_результат_РМв1(Р, мавка::предмет_зменшити(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      ));
    }

    дія РМв1_отримати_значення_числа(предмет: адреса<Предмет>, Р: адреса<Розширення>): д64 {
      вернути мавка::отримати_значення_числа(
        предмет як адреса<мавка::Предмет>,
        Р.обчислювач як адреса<мавка::Обчислювач>
      );
    }

    дія РМв1_виділити(Р: адреса<Розширення>, розмір: позитивне): памʼять<п8> {
      вернути мавка::виділити_памʼять<п8>(Р.обчислювач як адреса<мавка::Обчислювач>, розмір);
    }

    дія РМв1_обробити_падіння(Р: адреса<Розширення>, падіння: адреса<Падіння>, значення: адреса<Предмет>) {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      мавка::надрукувати_ю8(обчислювач, ю8"Ой, впали...");
    }

    дія РМв1_звільнити(Р: адреса<Розширення>, значення: адреса) {
      мавка::звільнити(Р.обчислювач як адреса<мавка::Обчислювач>, значення);
    }

    дія РМв1_перевірити_чи_предмет_є_дією(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_дією(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_нативною_дією(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_нативною_дією(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_числом(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_числом(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_текстом(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_текстом(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_юнікодом(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_юнікодом(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_модулем(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_модулем(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_списком(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_списком(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_словником(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_словником(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_логічним(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_логічним(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_байтами(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_байтами(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_отримати_копію_даних_тексту(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<текст>): логічне {
      вернути мавка::отримати_копію_даних_тексту(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
    }

    дія РМв1_отримати_дані_тексту(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<текст>): логічне {
      вернути мавка::отримати_дані_тексту(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
    }

    дія РМв1_отримати_копію_даних_юнікоду(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: невідома_адреса): логічне {
//      вернути мавка::отримати_копію_даних_юнікоду(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
      вернути ні;
    }

    дія РМв1_отримати_дані_юнікоду(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: невідома_адреса): логічне {
//      вернути мавка::отримати_дані_юнікоду(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
      вернути ні;
    }

    дія РМв1_отримати_копію_даних_юнікоду_як_ю8(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<ю8>): логічне {
      вернути мавка::отримати_копію_даних_юнікоду_як_Ю8(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
    }

    дія РМв1_отримати_копію_даних_байтів(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<памʼять<п8>>): позитивне {
      вернути мавка::отримати_копію_даних_байтів(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
    }

    дія РМв1_отримати_дані_байтів(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<памʼять<п8>>): позитивне {
      вернути мавка::отримати_дані_байтів(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, вихід);
    }

    дія РМв1_створити_байти(Р: адреса<Розширення>, довжина: позитивне): адреса<Предмет> {
      вернути мавка::створити_байти(Р.обчислювач як адреса<мавка::Обчислювач>, довжина) як адреса<Предмет>;
    }

    дія РМв1_записати_в_байти(предмет: адреса<Предмет>, Р: адреса<Розширення>, дані: памʼять<п8>, розмір: позитивне, зсув: позитивне) {
      мавка::записати_в_байти(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, дані, розмір, зсув);
    }

    дія РМв1_отримати_елементи_словника(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<памʼять<ЕлементСловника>>): позитивне {
      ціль предмет_словника = предмет як адреса<МаМа::ПредметСловника>;
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      вихід::вміст = мавка::виділити_памʼять<ЕлементСловника>(обчислювач, предмет_словника.елементи.розмір);
      змінна ціль п: позитивне = 0;
      поки п < предмет_словника.елементи.розмір {
        вихід::вміст[п].ключ = предмет_словника.елементи.елементи[п].ключ як адреса<РМв1::Предмет>;
        вихід::вміст[п].значення = предмет_словника.елементи.елементи[п].значення як адреса<РМв1::Предмет>;
        п += 1;
      }
      вернути предмет_словника.елементи.розмір;
    }

    дія РМв1_перевиділити(Р: адреса<Розширення>, значення: памʼять<п8>, новий_розмір: позитивне): памʼять<п8> {
      вернути мавка::перевиділити_памʼять<п8>(Р.обчислювач як адреса<мавка::Обчислювач>, значення, новий_розмір) як памʼять<п8>;
    }

    дія РМв1_знайти_іменований_аргумент(Р: адреса<Розширення>, іменовані_аргументи: адреса<ІменованіАргументи>, назва: адреса<Назва>, вихід: адреса<адреса<Предмет>>): логічне {
      вернути мавка::знайти_іменований_аргумент(
        Р.обчислювач як адреса<мавка::Обчислювач>,
        іменовані_аргументи як адреса<мавка::ІменованіАргументи>,
        назва як адреса<мавка::Назва>,
        вихід як адреса<адреса<мавка::Предмет>>
      );
    }

    дія РМв1_записати_іменований_аргумент(Р: адреса<Розширення>, іменовані_аргументи: адреса<ІменованіАргументи>, назва: адреса<Назва>, значення: адреса<Предмет>) {
      мавка::записати_іменований_аргумент(
        Р.обчислювач як адреса<мавка::Обчислювач>,
        іменовані_аргументи як адреса<мавка::ІменованіАргументи>,
        назва як адреса<мавка::Назва>,
        значення як адреса<мавка::Предмет>
      );
    }

    дія РМв1_виділити_іменовані_аргументи(Р: адреса<Розширення>): адреса<ІменованіАргументи> {
      вернути мавка::виділити_іменовані_аргументи(Р.обчислювач як адреса<мавка::Обчислювач>) як адреса<ІменованіАргументи>;
    }

    дія РМв1_звільнити_іменовані_аргументи(Р: адреса<Розширення>, іменовані_аргументи: адреса<ІменованіАргументи>) {
      мавка::звільнити_іменовані_аргументи(Р.обчислювач як адреса<мавка::Обчислювач>, іменовані_аргументи як адреса<мавка::ІменованіАргументи>);
    }

    дія РМв1_створити_адресу(Р: адреса<Розширення>, значення: адреса): адреса<Предмет> {
      вернути мавка::створити_адресу(Р.обчислювач як адреса<мавка::Обчислювач>, значення) як адреса<Предмет>;
    }

    дія РМв1_отримати_значення_адреси(предмет: адреса<Предмет>, Р: адреса<Розширення>): адреса {
      вернути мавка::отримати_значення_адреси(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_перевірити_чи_предмет_є_адресою(предмет: адреса<Предмет>, Р: адреса<Розширення>): логічне {
      вернути мавка::перевірити_чи_предмет_є_адресою(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>);
    }

    дія РМв1_отримати_елементи_списку(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<памʼять<адреса<Предмет>>>): позитивне {
      ціль предмет_списку = предмет як адреса<МаМа::ПредметСписку>;
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      вихід::вміст = мавка::виділити_памʼять<адреса<Предмет>>(обчислювач, предмет_списку.елементи.розмір);
      змінна ціль п: позитивне = 0;
      поки п < предмет_списку.елементи.розмір {
        вихід::вміст[п] = предмет_списку.елементи.дані[п] як адреса<РМв1::Предмет>;
        п += 1;
      }
      вернути предмет_списку.елементи.розмір;
    }

    дія РМв1_отримати_копію_даних_тексту_як_ю8сі(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<памʼять<п8>>): позитивне {
      вернути 0;
    }

    дія РМв1_отримати_копію_даних_юнікоду_як_ю8сі(предмет: адреса<Предмет>, Р: адреса<Розширення>, вихід: адреса<памʼять<п8>>): позитивне {
      ціль значення_ю8 = ю8 { пусто, 0 };
      якщо мавка::отримати_копію_даних_юнікоду_як_Ю8(предмет як адреса<мавка::Предмет>, Р.обчислювач як адреса<мавка::Обчислювач>, значення_ю8::адреса) {
        вернути 0;
      }
      вихід::вміст = значення_ю8.дані; // потім: виправити
      вернути значення_ю8.розмір;
    }

    дія РМв1_створити_юнікод_з_ю8сі(Р: адреса<Розширення>, значення: памʼять<п8>): адреса<Предмет> {
      вернути мавка::створити_юнікод_з_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, ю8 { значення, МаМа::порахувати_розмір_Ю8(значення) }) як адреса<Предмет>;
    }

    дія РМв1_назва(Р: адреса<Розширення>, значення: текст): адреса<Назва> {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      ціль значення_ю8сі: памʼять<п8> = пусто;
      якщо мавка::виділити_копію_ю8сі_цілі_з_тексту(обчислювач, значення, значення_ю8сі::адреса) == ні {
        мавка::надрукувати_ю8_і_вийти_з_процесу(обчислювач, ю8":(");
      }
      ціль назва = мавка::назва_з_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, ю8 { значення_ю8сі, МаМа::порахувати_розмір_Ю8(значення_ю8сі) }) як адреса<Назва>;
      мавка::звільнити_памʼять(обчислювач, значення_ю8сі);
      вернути назва;
    }

    дія РМв1_створити_текст(Р: адреса<Розширення>, значення: текст): адреса<Предмет> {
      ціль обчислювач = Р.обчислювач як адреса<мавка::Обчислювач>;
      ціль М = обчислювач.М;
      ціль значення_ю8 = ю8 { пусто, 0 };
      якщо мавка::виділити_копію_ю8_цілі_з_тексту(обчислювач, значення, значення_ю8::адреса) == ні {
        мавка::надрукувати_ю8_і_вийти_з_процесу(обчислювач, ю8":(");
      }
      ціль предмет_тексту = мавка::створити_текст_з_Ю8(Р.обчислювач як адреса<мавка::Обчислювач>, значення_ю8) як адреса<Предмет>;
      мавка::звільнити_памʼять(обчислювач, значення_ю8.дані);
      вернути предмет_тексту;
    }

    місцева дія нативна_дія_модуля_мавка_завантажити_РМв1(предмет_нативної_дії: адреса<мавка::Предмет>, обчислювач: адреса<мавка::Обчислювач>, предмет_я: адреса<мавка::Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<мавка::Предмет>>, іменовані_аргументи: адреса<мавка::ІменованіАргументи>, дані: адреса): мавка::Результат {
      змінна ціль знайдено_аргумент_шлях = ні;
      змінна ціль аргумент_шлях: адреса<мавка::Предмет> = пусто;
      якщо іменовані_аргументи != пусто {
        знайдено_аргумент_шлях = мавка::знайти_іменований_аргумент(обчислювач, іменовані_аргументи, мавка::назва_з_Ю8(обчислювач, ю8"шлях"), аргумент_шлях::адреса);
      }
      якщо аргументи != пусто {
        якщо знайдено_аргумент_шлях == ні {
          якщо кількість_аргументів > 0 {
            знайдено_аргумент_шлях = так;
            аргумент_шлях = аргументи[0];
          }
        }
      }
      якщо знайдено_аргумент_шлях == ні {
        вернути мавка::результат_падіння(обчислювач, мавка::створити_текст_з_Ю8(обчислювач, ю8"Не знайдено аргументу шляху"), пусто);
      }
      якщо мавка::перевірити_чи_предмет_є_юнікодом(аргумент_шлях, обчислювач) == ні {
        вернути мавка::результат_падіння(обчислювач, мавка::створити_текст_з_Ю8(обчислювач, ю8"Аргумент шлях не є юнікодом"), пусто);
      }
      ціль ю8_шляху = ю8 { пусто, 0 };
      якщо мавка::скопіювати_значення_предмета_юнікоду_як_Ю8(аргумент_шлях, обчислювач, ю8_шляху::адреса) == ні {
        вернути мавка::результат_падіння(обчислювач, пусто, пусто);
      }
      ціль завантажити_РМв1 = mavka_load_shared_object_function_ptr_from_file(ю8_шляху.дані як адреса<п8>, size_t(ю8_шляху.розмір), ю8сі"завантажити_РМв1" як адреса<п8>) як (Р: адреса<Розширення>) -> РМв1::Результат;
      якщо завантажити_РМв1 == пусто {
        вернути мавка::результат_падіння(обчислювач, мавка::створити_текст_з_Ю8(обчислювач, ю8"Помилка завантаження функції з файлу"), пусто);
      }
      ціль розширення = мавка::виділити<Розширення>(обчислювач);
      розширення.мажор = МАЖОР;
      розширення.мінор = МІНОР;
      розширення.патч = ПАТЧ;
      розширення.дані = пусто;
      розширення.обчислювач = обчислювач;
      розширення.виділити_падіння = виділити_падіння;
      розширення.звільнити_падіння = звільнити_падіння;
      розширення.предмет_логічного_так = обчислювач.М.предмет_логічного_так як адреса<Предмет>;
      розширення.предмет_логічного_ні = обчислювач.М.предмет_логічного_ні як адреса<Предмет>;
      розширення.надрукувати_ю8 = РМв1_надрукувати_ю8;
      розширення.надрукувати_предмет = РМв1_надрукувати_предмет;
      розширення.взяти_файл_ю8 = РМв1_взяти_файл_ю8;
      розширення.зберегти_предмет = РМв1_зберегти_предмет;
      розширення.видалити_збережений_предмет = РМв1_видалити_збережений_предмет;
      розширення.назва_з_ю8 = РМв1_назва_з_ю8;
      розширення.створити_нативну_дію = РМв1_створити_нативну_дію;
      розширення.створити_число = РМв1_створити_число;
      розширення.створити_текст_з_ю8 = РМв1_створити_текст_з_ю8;
      розширення.створити_юнікод_з_ю8 = РМв1_створити_юнікод_з_ю8;
      розширення.створити_модуль = РМв1_створити_модуль;
      розширення.створити_список = РМв1_створити_список;
      розширення.створити_словник = РМв1_створити_словник;
      розширення.створити_предмет = РМв1_створити_предмет;
      розширення.предмет_виконати = РМв1_предмет_виконати;
      розширення.предмет_отримати_властивість = РМв1_предмет_отримати_властивість;
      розширення.предмет_змінити_властивість = РМв1_предмет_змінити_властивість;
      розширення.предмет_видалити_властивість = РМв1_предмет_видалити_властивість;
      розширення.предмет_виконати_властивість = РМв1_предмет_виконати_властивість;
      розширення.предмет_отримати_елемент = РМв1_предмет_отримати_елемент;
      розширення.предмет_змінити_елемент = РМв1_предмет_змінити_елемент;
      розширення.предмет_видалити_елемент = РМв1_предмет_видалити_елемент;
      розширення.предмет_отримати_перебір = РМв1_предмет_отримати_перебір;
      розширення.предмет_додати = РМв1_предмет_додати;
      розширення.предмет_відняти = РМв1_предмет_відняти;
      розширення.предмет_помножити = РМв1_предмет_помножити;
      розширення.предмет_поділити = РМв1_предмет_поділити;
      розширення.предмет_остача = РМв1_предмет_остача;
      розширення.предмет_неповна_частка = РМв1_предмет_неповна_частка;
      розширення.предмет_степінь = РМв1_предмет_степінь;
      розширення.предмет_вліво = РМв1_предмет_вліво;
      розширення.предмет_вправо_зі_заповненням = РМв1_предмет_вправо_зі_заповненням;
      розширення.предмет_двійкове_і = РМв1_предмет_двійкове_і;
      розширення.предмет_двійкове_або = РМв1_предмет_двійкове_або;
      розширення.предмет_двійкове_виключне_або = РМв1_предмет_двійкове_виключне_або;
      розширення.предмет_двійкове_не = РМв1_предмет_двійкове_не;
      розширення.предмет_більше = РМв1_предмет_більше;
      розширення.предмет_менше = РМв1_предмет_менше;
      розширення.предмет_рівно = РМв1_предмет_рівно;
      розширення.предмет_містить = РМв1_предмет_містить;
      розширення.предмет_є = РМв1_предмет_є;
      розширення.предмет_відʼємне = РМв1_предмет_відʼємне;
      розширення.предмет_числове = РМв1_предмет_числове;
      розширення.предмет_заперечити = РМв1_предмет_заперечити;
      розширення.предмет_збільшити = РМв1_предмет_збільшити;
      розширення.предмет_зменшити = РМв1_предмет_зменшити;
      розширення.отримати_значення_числа = РМв1_отримати_значення_числа;
      розширення.виділити = РМв1_виділити;
      розширення.обробити_падіння = РМв1_обробити_падіння;
      розширення.звільнити = РМв1_звільнити;
      розширення.перевірити_чи_предмет_є_дією = РМв1_перевірити_чи_предмет_є_дією;
      розширення.перевірити_чи_предмет_є_нативною_дією = РМв1_перевірити_чи_предмет_є_нативною_дією;
      розширення.перевірити_чи_предмет_є_числом = РМв1_перевірити_чи_предмет_є_числом;
      розширення.перевірити_чи_предмет_є_текстом = РМв1_перевірити_чи_предмет_є_текстом;
      розширення.перевірити_чи_предмет_є_юнікодом = РМв1_перевірити_чи_предмет_є_юнікодом;
      розширення.перевірити_чи_предмет_є_модулем = РМв1_перевірити_чи_предмет_є_модулем;
      розширення.перевірити_чи_предмет_є_списком = РМв1_перевірити_чи_предмет_є_списком;
      розширення.перевірити_чи_предмет_є_словником = РМв1_перевірити_чи_предмет_є_словником;
      розширення.перевірити_чи_предмет_є_логічним = РМв1_перевірити_чи_предмет_є_логічним;
      розширення.перевірити_чи_предмет_є_байтами = РМв1_перевірити_чи_предмет_є_байтами;
      розширення.отримати_копію_даних_тексту = РМв1_отримати_копію_даних_тексту;
      розширення.отримати_дані_тексту = РМв1_отримати_дані_тексту;
      розширення.отримати_копію_даних_юнікоду = РМв1_отримати_копію_даних_юнікоду;
      розширення.отримати_дані_юнікоду = РМв1_отримати_дані_юнікоду;
      розширення.отримати_копію_даних_юнікоду_як_ю8 = РМв1_отримати_копію_даних_юнікоду_як_ю8;
      розширення.отримати_копію_даних_байтів = РМв1_отримати_копію_даних_байтів;
      розширення.отримати_дані_байтів = РМв1_отримати_дані_байтів;
      розширення.створити_байти = РМв1_створити_байти;
      розширення.записати_в_байти = РМв1_записати_в_байти;
      розширення.отримати_елементи_словника = РМв1_отримати_елементи_словника;
      розширення.перевиділити = РМв1_перевиділити;
      розширення.знайти_іменований_аргумент = РМв1_знайти_іменований_аргумент;
      розширення.записати_іменований_аргумент = РМв1_записати_іменований_аргумент;
      розширення.виділити_іменовані_аргументи = РМв1_виділити_іменовані_аргументи;
      розширення.звільнити_іменовані_аргументи = РМв1_звільнити_іменовані_аргументи;
      розширення.створити_адресу = РМв1_створити_адресу;
      розширення.отримати_значення_адреси = РМв1_отримати_значення_адреси;
      розширення.перевірити_чи_предмет_є_адресою = РМв1_перевірити_чи_предмет_є_адресою;
      розширення.отримати_елементи_списку = РМв1_отримати_елементи_списку;
      розширення.отримати_копію_даних_тексту_як_ю8сі = РМв1_отримати_копію_даних_тексту_як_ю8сі;
      розширення.отримати_копію_даних_юнікоду_як_ю8сі = РМв1_отримати_копію_даних_юнікоду_як_ю8сі;
      розширення.створити_юнікод_з_ю8сі = РМв1_створити_юнікод_з_ю8сі;
      розширення.назва = РМв1_назва;
      розширення.створити_текст = РМв1_створити_текст;
      ціль результат_завантаження_РМв1 = завантажити_РМв1(розширення);
      якщо результат_завантаження_РМв1.падіння != пусто {
        мавка::звільнити(обчислювач, розширення);
      }
      вернути перетворити_результат_РМв1_в_результат_мавки(розширення, результат_завантаження_РМв1);
    }
  }
}

секція мавка {
  секція бібліотека {
    дія нативна_дія_модуля_мавка_отримати_кількість_предметів(предмет_нативної_дії: адреса<Предмет>, обчислювач: адреса<Обчислювач>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, дані: адреса): Результат {
      вернути мавка::результат_успіх(обчислювач, створити_число(обчислювач, д64(обчислювач.М.утилізатор.кількість_предметів)));
    }

    дія нативна_дія_модуля_мавка_отримати_кількість_середовищ(предмет_нативної_дії: адреса<Предмет>, обчислювач: адреса<Обчислювач>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, дані: адреса): Результат {
      вернути мавка::результат_успіх(обчислювач, створити_число(обчислювач, д64(обчислювач.М.утилізатор.кількість_середовищ)));
    }

    дія нативна_дія_модуля_мавка_утилізувати(предмет_нативної_дії: адреса<Предмет>, обчислювач: адреса<Обчислювач>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, дані: адреса): Результат {
      мавка::утилізувати(обчислювач);
      вернути мавка::результат_успіх(обчислювач, пусто);
    }

    місцева дія заповнити_модуль_мавка(обчислювач: адреса<Обчислювач>, предмет_модуля: адреса<Предмет>) {
      предмет_змінити_властивість(предмет_модуля, обчислювач, назва_з_Ю8(обчислювач, ю8"завантажити_РМв1"), створити_нативну_дію(обчислювач, назва_з_Ю8(обчислювач, ю8"завантажити_РМв1"), РМв1::втілення::нативна_дія_модуля_мавка_завантажити_РМв1, пусто, пусто));
      предмет_змінити_властивість(предмет_модуля, обчислювач, назва_з_Ю8(обчислювач, ю8"отримати_кількість_предметів"), створити_нативну_дію(обчислювач, назва_з_Ю8(обчислювач, ю8"отримати_кількість_предметів"), нативна_дія_модуля_мавка_отримати_кількість_предметів, пусто, пусто));
      предмет_змінити_властивість(предмет_модуля, обчислювач, назва_з_Ю8(обчислювач, ю8"отримати_кількість_середовищ"), створити_нативну_дію(обчислювач, назва_з_Ю8(обчислювач, ю8"отримати_кількість_середовищ"), нативна_дія_модуля_мавка_отримати_кількість_середовищ, пусто, пусто));
      предмет_змінити_властивість(предмет_модуля, обчислювач, назва_з_Ю8(обчислювач, ю8"утилізувати"), створити_нативну_дію(обчислювач, назва_з_Ю8(обчислювач, ю8"утилізувати"), нативна_дія_модуля_мавка_утилізувати, пусто, пусто));
    }
  }
}