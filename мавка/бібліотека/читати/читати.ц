взяти визначення МаМа;
взяти визначення мавка/бібліотека;

зовнішня дія мавка_система_прочитати_ю8_зі_стандартного_вводу(префікс: ю8, вихід: адреса<ю8>, додати_в_історію: логічне): логічне;

секція мавка {
  секція бібліотека {
    дія рідна_дія_читати(обчислювач: адреса<Обчислювач>, предмет_дії: адреса<Предмет>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
      змінна ціль знайдено_аргумент_префікс = ні;
      змінна ціль аргумент_префікс: адреса<Предмет> = пусто;
      якщо іменовані_аргументи != пусто {
        знайдено_аргумент_префікс = знайти_іменований_аргумент(обчислювач, іменовані_аргументи, назва(обчислювач, "префікс"), аргумент_префікс::адреса);
      }
      якщо аргументи != пусто {
        якщо знайдено_аргумент_префікс == ні {
          якщо кількість_аргументів > 0 {
            знайдено_аргумент_префікс = так;
            аргумент_префікс = аргументи[0];
          }
        }
      }
      змінна ціль префікс = т8 { 0, пусто };
      якщо знайдено_аргумент_префікс == так {
        якщо аргумент_префікс != пусто {
          якщо перевірити_чи_предмет_є_текстом(обчислювач, аргумент_префікс) == ні {
            вернути падіння(обчислювач, "Префікс має бути текстом або пусто");
          }
          якщо отримати_копію_значення_тексту(обчислювач, аргумент_префікс, префікс::адреса) == ні {
            вернути падіння(обчислювач, "Не вдалось отримати значення префікса");
          }
        }
      }
      змінна ціль префікс_ю8 = ю8 { 0, пусто };
      якщо перекодувати_т8_в_ю8(обчислювач, префікс, префікс_ю8::адреса) == ні {
        вернути падіння(обчислювач, "Не вдалось перекодувати префікс в ю8");
      }
      змінна ціль прочитане_значення_ю8 = ю8 { 0, пусто };
      якщо мавка_система_прочитати_ю8_зі_стандартного_вводу(префікс_ю8, прочитане_значення_ю8::адреса, ні) == ні {
        звільнити_памʼять(обчислювач, префікс.дані);
        звільнити_памʼять(обчислювач, префікс_ю8.дані);
        вернути пусто;
      }
      звільнити_памʼять(обчислювач, префікс.дані);
      звільнити_памʼять(обчислювач, префікс_ю8.дані);
      змінна ціль прочитане_значення = т8 { 0, пусто };
      якщо перекодувати_ю8_в_т8(обчислювач, прочитане_значення_ю8, прочитане_значення::адреса) == ні {
        вернути падіння(обчислювач, "Не вдалось перекодувати значення в т8");
      }
      ціль предмет_тексту = створити_текст_без_копіювання(обчислювач, прочитане_значення);
      звільнити_памʼять(обчислювач, прочитане_значення_ю8.дані);
      вернути предмет_тексту;
    }

    дія створити_дію_читати(обчислювач: адреса<Обчислювач>): предмет_або_стан_падіння {
      вернути створити_рідну_дію(обчислювач, назва(обчислювач, т8"читати"), 0, пусто, пусто, рідна_дія_читати);
    }

    зовнішня дія взяти_модуль_біб_читати(обчислювач: адреса<Обчислювач>): предмет_або_стан_падіння {
      ціль М = обчислювач;
      змінна ціль результат = створити_текст(обчислювач, "мавка:бібліотека/читати/читати.ц");
      якщо перевірити_чи_стан_падіння(обчислювач) {
        вернути результат;
      }
      ціль предмет_шляху = результат;
      змінна ціль взятий_предмет: адреса<МаМа::Предмет> = пусто;
      якщо МаМа::отримати_взятий_предмет(М, предмет_шляху як адреса<МаМа::Предмет>, взятий_предмет::адреса) {
        вернути взятий_предмет як адреса<Предмет>;
      }
      результат = створити_дію_читати(обчислювач);
      якщо перевірити_чи_стан_падіння(обчислювач) {
        вернути результат;
      }
      МаМа::покласти_взятий_предмет(М, предмет_шляху як адреса<МаМа::Предмет>, результат як адреса<МаМа::Предмет>);
      вернути результат;
    }
  }
}