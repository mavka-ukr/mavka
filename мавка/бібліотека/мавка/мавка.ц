взяти визначення мавка;
взяти визначення мавка/бібліотека;

секція мавка {
  секція бібліотека {
    місцева дія створити_рідну_дію_бібліотеки_мавка_завантажити_РМв1(М: адреса<Машина>, предмет_модуля: адреса<Предмет>)-> ПредметАбоСтанПадіння<Предмет>;

    дія створити_модуль_мавка(М: адреса<Машина>)-> ПредметАбоСтанПадіння<Предмет> {


      змінна результат = створити_предмет_модуля(М, створити_назву(М, "мавка")) як адреса<Предмет>;
      якщо перевірити_чи_стан_падіння(М) {
        вернути результат;
      }

      змінна предмет_модуля_мавка = результат;

      змінна предмет_тексту_версія = створити_предмет_тексту_без_копіювання(М, отримати_версію_мавки_як_т8(М)) як адреса<Предмет>;
      якщо перевірити_чи_стан_падіння(М) {
        вернути предмет_тексту_версія;
      }
      результат = предмет_змінити_властивість(М, предмет_модуля_мавка, створити_назву(М, "версія"), предмет_тексту_версія, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 });
      якщо перевірити_чи_стан_падіння(М) {
        вернути результат;
      }

      результат = створити_рідну_дію_бібліотеки_мавка_завантажити_РМв1(М, предмет_модуля_мавка);
      якщо перевірити_чи_стан_падіння(М) {
        вернути результат;
      }
      результат = предмет_змінити_властивість(М, предмет_модуля_мавка, створити_назву(М, "завантажити_РМв1"), результат, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 });
      якщо перевірити_чи_стан_падіння(М) {
        вернути результат;
      }

      вернути предмет_модуля_мавка;
    }

    місцева дія взяти_модуль_біб_мавка(М: адреса<Машина>)-> ПредметАбоСтанПадіння<Предмет> {

      змінна результат = створити_предмет_тексту(М, "мавка:бібліотека/мавка/мавка.ц") як адреса<Предмет>;
      якщо перевірити_чи_стан_падіння(М) {
        вернути результат;
      }
      змінна предмет_шляху = результат;
      змінна взятий_предмет: адреса<Предмет> = пусто;
      якщо отримати_взятий_предмет(М, предмет_шляху як адреса<Предмет>, взятий_предмет::адреса) {
        вернути взятий_предмет як адреса<Предмет>;
      }
      результат = створити_модуль_мавка(М);
      якщо перевірити_чи_стан_падіння(М) {
        вернути результат;
      }
      покласти_взятий_предмет(М, предмет_шляху як адреса<Предмет>, результат як адреса<Предмет>);
      вернути результат;
    }
  }
}