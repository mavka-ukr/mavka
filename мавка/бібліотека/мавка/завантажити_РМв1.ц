взяти визначення мавка;
взяти визначення мавка/бібліотека;
взяти визначення мавка/розширення;

зовнішня дія мавка_система_відкрити_поширену_бібліотеку(шлях: адреса<ю8>): невідома_адреса;
зовнішня дія мавка_система_закрити_поширену_бібліотеку(поширена_бібліотека: невідома_адреса);
зовнішня дія мавка_система_отримати_символ_поширеної_бібліотеки(поширена_бібліотека: невідома_адреса, назва: адреса<ю8>): невідома_адреса;
зовнішня дія мавка_система_отримати_абсолютний_шлях(шлях: адреса<ю8>, вихід: адреса<ю8>): логічне;

секція мавка {
  секція бібліотека {
    дія завантажити_РМв1_шлях_ю8(М: адреса<Машина>, шлях_ю8: ю8): предмет_або_стан_падіння {
      змінна шлях_до_файлу = ю8 { 0, пусто };
      мавка_система_отримати_абсолютний_шлях(шлях_ю8::адреса, шлях_до_файлу::адреса);
      змінна взятий_предмет: адреса<Предмет> = пусто;
      якщо отримати_взятий_предмет(М, створити_предмет_юнікоду_з_ю8(М, шлях_до_файлу) як адреса<Предмет>, взятий_предмет::адреса) {
        звільнити_памʼять(М, шлях_до_файлу.дані);
        вернути взятий_предмет;
      }
      змінна поширена_бібліотека = мавка_система_відкрити_поширену_бібліотеку(шлях_до_файлу::адреса);
      якщо поширена_бібліотека == пусто {
        звільнити_памʼять(М, шлях_до_файлу.дані);
        вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 }, створити_предмет_тексту(М, "Не вдалось відкрити поширену бібліотеку") як адреса<Предмет>);
      }
      змінна назва_символа = ю8"завантажити_РМв1";
      змінна символ_завантажити_РМв1 = мавка_система_отримати_символ_поширеної_бібліотеки(поширена_бібліотека, назва_символа::адреса);
      якщо символ_завантажити_РМв1 == пусто {
        звільнити_памʼять(М, шлях_до_файлу.дані);
        мавка_система_закрити_поширену_бібліотеку(поширена_бібліотека);
        вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 }, створити_предмет_тексту(М, "Не вдалось отримати символ поширеної бібліотеки") як адреса<Предмет>);
      }
      змінна дія_завантаження_РМв1 = символ_завантажити_РМв1 як (Р: адреса<РМв1::Розширення>) -> РМв1::ПредметАбоСтанПадіння;
      змінна результат_РМв1 = розширення::виконати_завантаження_РМв1(М, дія_завантаження_РМв1);
      якщо перевірити_чи_стан_падіння(М) == ні {
        покласти_взятий_предмет(М, створити_предмет_юнікоду_з_ю8(М, шлях_до_файлу) як адреса<Предмет>, результат_РМв1 як адреса<Предмет>);
      }
      звільнити_памʼять(М, шлях_до_файлу.дані);
      вернути результат_РМв1 як адреса<Предмет>;
    }

    дія рідна_дія_завантажити_РМв1(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>): предмет_або_стан_падіння {
      змінна аргумент_шлях: адреса<Предмет> = пусто;
      змінна знайдено_аргумент_шлях = ні;
      якщо іменовані_аргументи != пусто {
        знайдено_аргумент_шлях = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "шлях"), аргумент_шлях::адреса);
      }
      якщо кількість_аргументів > 0 {
        якщо знайдено_аргумент_шлях == ні {
          аргумент_шлях = аргументи[0];
          знайдено_аргумент_шлях = так;
        }
      }
      якщо знайдено_аргумент_шлях == ні {
        вернути результат_стан_падіння(М, Місцезнаходження { пусто, 0 }, створити_предмет_тексту(М, "Пропущено аргумент \"шлях\"") як адреса<Предмет>);
      }
      змінна шлях_ю8 = ю8 { 0, пусто };
      якщо аргумент_шлях.тип == М.предмет_структури_текст {
        змінна шлях_текст = аргумент_шлях як адреса<ПредметТексту>;
        якщо перекодувати_т8_в_ю8(М, шлях_текст.значення, шлях_ю8::адреса, ні) == ні {
          вернути результат_стан_падіння(М, Місцезнаходження { пусто, 0 }, створити_предмет_тексту(М, "Не вдалось отримати ю8 з шляху") як адреса<Предмет>);
        }
      } інакше якщо аргумент_шлях.тип == М.предмет_структури_юнікод {
        змінна шлях_юнікод = аргумент_шлях як адреса<ПредметЮнікоду>;
        якщо перекодувати_ю32_в_ю8(М, шлях_юнікод.значення, шлях_ю8::адреса, ні) == ні {
          вернути результат_стан_падіння(М, Місцезнаходження { пусто, 0 }, створити_предмет_тексту(М, "Не вдалось отримати ю8 з шляху") як адреса<Предмет>);
        }
      } інакше {
        вернути результат_стан_падіння(М, Місцезнаходження { пусто, 0 }, створити_предмет_тексту(М, "Аргумент \"шлях\" може містити лише текст або юнікод") як адреса<Предмет>);
      }
      змінна результат = завантажити_РМв1_шлях_ю8(М, шлях_ю8);
      звільнити_памʼять(М, шлях_ю8.дані);
      вернути результат;
    }

    місцева дія створити_рідну_дію_бібліотеки_мавка_завантажити_РМв1(М: адреса<Машина>, предмет_модуля: адреса<Предмет>): предмет_або_стан_падіння {

      змінна параметр_шлях = створити_предмет_параметра(М, створити_назву(М, "шлях"), пусто, пусто);
      змінна дані_параметрів_метода_завантажити_РМв1 = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
      дані_параметрів_метода_завантажити_РМв1[0] = параметр_шлях;
      змінна предмет_дії_метода_завантажити_РМв1 = створити_предмет_рідної_дії(М, створити_назву(М, "завантажити_РМв1"), 1, дані_параметрів_метода_завантажити_РМв1, пусто, рідна_дія_завантажити_РМв1, пусто, пусто, пусто) як адреса<Предмет>;
      вернути предмет_дії_метода_завантажити_РМв1 як адреса<Предмет>;
    }
  }
}