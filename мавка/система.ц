взяти визначення ./мавка_втілення;

секція мавка {
  секція система {
    зовнішня дія виділити_сиру_памʼять(обчислювач: адреса<Обчислювач>, розмір: позитивне): памʼять<п8> {
      вернути обчислювач.система.виділити_сиру_памʼять(розмір);
    }

    зовнішня дія перевиділити_сиру_памʼять(обчислювач: адреса<Обчислювач>, значення: памʼять<п8>, новий_розмір: позитивне): памʼять<п8> {
      вернути обчислювач.система.перевиділити_сиру_памʼять(значення, новий_розмір);
    }

    зовнішня дія звільнити_сиру_памʼять(обчислювач: адреса<Обчислювач>, значення: памʼять<п8>) {
      обчислювач.система.звільнити_сиру_памʼять(значення);
    }

    зовнішня дія вивести_в_стандартний_вивід(обчислювач: адреса<Обчислювач>, значення: памʼять<п8>, розмір: позитивне) {
      обчислювач.система.вивести_в_стандартний_вивід(значення, розмір);
    }

    зовнішня дія вивести_текст_в_стандартний_вивід(обчислювач: адреса<Обчислювач>, значення: текст) {
      обчислювач.система.вивести_текст_в_стандартний_вивід(значення);
    }

    зовнішня дія вивести_ю8_в_стандартний_вивід(обчислювач: адреса<Обчислювач>, значення: ю8) {
      обчислювач.система.вивести_ю8_в_стандартний_вивід(значення);
    }

    зовнішня дія вийти_з_процесу(обчислювач: адреса<Обчислювач>, код: ц32) {
      обчислювач.система.вийти_з_процесу(код);
    }

    зовнішня дія отримати_абсолютний_шлях(обчислювач: адреса<Обчислювач>, шлях: ю8, вихід: адреса<ю8>): логічне {
      вернути обчислювач.система.отримати_абсолютний_шлях(шлях, вихід);
    }

    зовнішня дія отримати_абсолютний_батьківський_шлях(обчислювач: адреса<Обчислювач>, шлях: ю8, вихід: адреса<ю8>): логічне {
      вернути обчислювач.система.отримати_абсолютний_батьківський_шлях(шлях, вихід);
    }

    зовнішня дія прочитати_файл(обчислювач: адреса<Обчислювач>, шлях: ю8, вихід: адреса<ю8>): логічне {
      вернути обчислювач.система.прочитати_файл(шлях, вихід);
    }

    зовнішня дія прочитати_ю8_зі_стандартного_вводу(обчислювач: адреса<Обчислювач>, префікс: ю8, вихід: адреса<ю8>): логічне {
      вернути обчислювач.система.прочитати_ю8_зі_стандартного_вводу(префікс, вихід);
    }

    зовнішня дія прочитати_текст_зі_стандартного_вводу(обчислювач: адреса<Обчислювач>, префікс: текст, вихід: адреса<текст>): логічне {
      вернути обчислювач.система.прочитати_текст_зі_стандартного_вводу(префікс, вихід);
    }

    зовнішня дія відкрити_поширену_бібліотеку(обчислювач: адреса<Обчислювач>, шлях: памʼять<п8>, розмір_шляху: позитивне): невідома_адреса {
      вернути обчислювач.система.відкрити_поширену_бібліотеку(шлях, розмір_шляху);
    }

    зовнішня дія закрити_поширену_бібліотеку(обчислювач: адреса<Обчислювач>, поширена_бібліотека: невідома_адреса) {
      обчислювач.система.закрити_поширену_бібліотеку(поширена_бібліотека);
    }

    зовнішня дія отримати_символ_поширеної_бібліотеки(обчислювач: адреса<Обчислювач>, поширена_бібліотека: невідома_адреса, назва_символа: памʼять<п8>, розмір_назви_символа: позитивне): невідома_адреса {
      вернути обчислювач.система.отримати_символ_поширеної_бібліотеки(поширена_бібліотека, назва_символа, розмір_назви_символа);
    }
  }
}