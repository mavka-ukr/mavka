взяти визначення мавка;
взяти визначення РМв1;

секція мавка {
  секція розширення {
    дія РМв1_вивести_ю8(Р: адреса<РМв1::Розширення>, значення: ю8) {
      ціль обчислювач = Р.обчислювач як адреса<Обчислювач>;
      вивести_ю8(обчислювач, значення);
    }

    дія РМв1_надрукувати_ю8(Р: адреса<РМв1::Розширення>, значення: ю8) {
      ціль обчислювач = Р.обчислювач як адреса<Обчислювач>;
      надрукувати_ю8(обчислювач, значення);
    }

    дія відклик_перед_знищенням_предмета_розширення(обчислювач: адреса<Обчислювач>, предмет_розширення: адреса<Предмет>) {
      ціль Р = отримати_Р_з_розширення(обчислювач, предмет_розширення) як адреса<РМв1::Розширення>;
      якщо Р.відклик_перед_звільненням != пусто {
        Р.відклик_перед_звільненням(Р);
      }
      звільнити(обчислювач, Р);
    }

    зовнішня дія виконати_завантаження_РМв1(обчислювач: адреса<Обчислювач>, дія_завантаження_РМв1: (Р: адреса<РМв1::Розширення>) -> РМв1::Результат): Результат {
      ціль Р = виділити<РМв1::Розширення>(обчислювач);
      Р.обчислювач = обчислювач;
      Р.дані = пусто;
      Р.відклик_перед_звільненням = пусто;
      Р.вивести_ю8 = РМв1_вивести_ю8;
      Р.надрукувати_ю8 = РМв1_надрукувати_ю8;
      ціль результат = дія_завантаження_РМв1(Р);
      якщо результат.стан_падіння == позитивне(так) {
        вернути Результат { позитивне(так), результат.значення як адреса<Предмет> };
      }
      ціль результат_створення_розширення = створити_розширення(обчислювач, Р, результат.значення як адреса<Предмет>, відклик_перед_знищенням_предмета_розширення);
      якщо результат_створення_розширення.стан_падіння == позитивне(так) {
        звільнити(обчислювач, Р);
      }
      вернути результат_створення_розширення;
    }
  }
}