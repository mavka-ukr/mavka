взяти визначення мавка;
взяти визначення бібліотека_мавки;

зовнішня дія мавка_система_прочитати_ю8_зі_стандартного_вводу(префікс: адреса<ю8>, вихід: адреса<ю8>, додати_в_історію: логічне): логічне;

секція мавка {
  секція бібліотека {
    дія рідна_дія_читати(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>) -> ПредметАбоСтанПадіння<Предмет> {
      змінна знайдено_аргумент_префікс = ні;
      змінна аргумент_префікс: адреса<Предмет> = пусто;

      якщо іменовані_аргументи != пусто {
        знайдено_аргумент_префікс = знайти_іменований_аргумент(М, іменовані_аргументи, створити_назву(М, "префікс"), аргумент_префікс::адреса);
      }
      якщо аргументи != пусто {
        якщо знайдено_аргумент_префікс == ні {
          якщо кількість_аргументів > 0 {
            знайдено_аргумент_префікс = так;
            аргумент_префікс = аргументи[0];
          }
        }
      }
      змінна префікс = т8 { 0, пусто };
      якщо знайдено_аргумент_префікс == так {
        якщо аргумент_префікс != пусто {
          якщо не перевірити_чи_предмет_є_текстом(М, аргумент_префікс) {
            вернути падіння(М, "Префікс має бути текстом або пусто");
          }
          префікс = отримати_значення_тексту(М, аргумент_префікс як адреса<ПредметТексту>);
        }
      }
      змінна префікс_ю8 = ю8 { 0, пусто };
      якщо не перекодувати_т8_в_ю8(М, ОпціїПерекодуванняТ8вЮ8 { з_кінцем = ні }, префікс, префікс_ю8::адреса, пусто, пусто) {
        вернути падіння(М, "Не вдалось перекодувати префікс в юнікод");
      }
      змінна прочитане_значення_ю8 = ю8 { 0, пусто };
      якщо не мавка_система_прочитати_ю8_зі_стандартного_вводу(префікс_ю8::адреса, прочитане_значення_ю8::адреса, ні) {
        звільнити_памʼять(М, префікс_ю8.дані);
        вернути пусто;
      }
      звільнити_памʼять(М, префікс_ю8.дані);
      змінна прочитане_значення = т8 { 0, пусто };
      якщо перекодувати_ю8_в_т8(М, ОпціїПерекодуванняЮ8вТ8 { з_кінцем = ні, екранувати_невідомі = ні }, прочитане_значення_ю8, прочитане_значення::адреса, пусто, пусто) == ні {
        вернути падіння(М, "Не вдалось перекодувати прочитане значення в КД");
      }
      змінна предмет_тексту = створити_предмет_тексту_без_копіювання(М, прочитане_значення) як адреса<Предмет>;
      звільнити_памʼять(М, прочитане_значення_ю8.дані);
      вернути предмет_тексту;
    }

    дія створити_дію_читати(М: адреса<Машина>) -> ПредметАбоСтанПадіння<Предмет> {
      вернути створити_предмет_рідної_дії(М, створити_назву(М, "читати"), 0, пусто, рідна_дія_читати, пусто, пусто, пусто) як адреса<Предмет>;
    }

    місцева дія взяти_модуль_біб_читати(М: адреса<Машина>) -> ПредметАбоСтанПадіння<Предмет> {
      змінна шлях_ю8 = ю8"мавка:бібліотека/читати/читати.ц";
      змінна шлях = створити_предмет_байтів(М, шлях_ю8.розмір, шлях_ю8.дані);
      якщо перевірити_чи_стан_падіння(М) {
        вернути пусто;
      }
      змінна взятий_предмет: адреса<Предмет> = пусто;
      якщо отримати_взятий_предмет(М, шлях, взятий_предмет::адреса) {
        вернути взятий_предмет як адреса<Предмет>;
      }
      змінна результат = створити_дію_читати(М);
      якщо перевірити_чи_стан_падіння(М) {
        вернути пусто;
      }
      покласти_взятий_предмет(М, шлях, результат як адреса<Предмет>);
      вернути результат;
    }
  }
}