секція РМв1 {
  структура Місцезнаходження;
  структура ІнформаціяПадіння;
  структура Предмет;
  структура Результат;
  структура Розширення;
  структура ІменованіАргументи;
  структура ЕлементСловника;

  структура Місцезнаходження {
    шлях: адреса<Предмет>;
    рядок: позитивне;
  }

  структура ЕлементІсторіїВиконання {
    місцезнаходження: Місцезнаходження;
    назва: т8;
  }

  структура ІнформаціяПадіння {
    місцезнаходження: Місцезнаходження;
    розмір_історії: позитивне;
    історія: памʼять<ЕлементІсторіїВиконання>;
  }

  структура Результат {
    стан_падіння: позитивне;
    значення: адреса<Предмет>;
  }

  структура ЕлементСловника {
    ключ: адреса<Предмет>;
    значення: адреса<Предмет>;
  }

  структура ЕлементМодуля {
    назва: адреса<Предмет>;
    значення: адреса<Предмет>;
  }

  синонім РіднаДія = (Р: адреса<Розширення>, предмет_дії: адреса<Предмет>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, іменовані_аргументи: адреса<ІменованіАргументи>, місцезнаходження: Місцезнаходження) -> Результат;
  синонім ЗробитиКопіюДанихДії = (Р: адреса<Розширення>, предмет_дії: адреса<Предмет>) -> невідома_адреса;
  синонім ВідкликПередЗнищеннямДії = (Р: адреса<Розширення>, предмет_дії: адреса<Предмет>) -> ніщо;
  синонім ВідкликПередЗнищеннямРесурсу = (Р: адреса<Розширення>, предмет_ресурсу: адреса<Предмет>) -> ніщо;

  структура Розширення {
    обчислювач: невідома_адреса;
    дані: невідома_адреса;
    відклик_перед_звільненням: (Р: адреса<Розширення>) -> ніщо;
    вивести_ю8: (Р: адреса<Розширення>, значення: ю8) -> ніщо;
    надрукувати_ю8: (Р: адреса<Розширення>, значення: ю8) -> ніщо;
    перевірити_чи_стан_падіння: (Р: адреса<Розширення>) -> логічне;
    увімкнути_стан_падіння: (Р: адреса<Розширення>, місцезнаходження: Місцезнаходження) -> ніщо;
    вимкнути_стан_падіння: (Р: адреса<Розширення>) -> ніщо;
    отримати_інформацію_падіння: (Р: адреса<Розширення>, вихід: адреса<адреса<ІнформаціяПадіння>>) -> логічне;
    знищити_інформацію_падіння: (Р: адреса<Розширення>, інформація_падіння: адреса<ІнформаціяПадіння>) -> ніщо;
    предмет_логічного_так: адреса<Предмет>;
    предмет_логічного_ні: адреса<Предмет>;
    створити_рідну_дію: (Р: адреса<Розширення>, назва: адреса<Предмет>, кількість_параметрів: позитивне, параметри: памʼять<адреса<Предмет>>, тип_результату: адреса<Предмет>, рідна_дія: РіднаДія, дані: невідома_адреса, зробити_копію_даних: ЗробитиКопіюДанихДії, відклик_перед_звільненням: ВідкликПередЗнищеннямДії) -> Результат;
    отримати_дані_рідної_дії: (Р: адреса<Розширення>, предмет_дії: адреса<Предмет>) -> невідома_адреса;
    створити_число: (Р: адреса<Розширення>, значення: д64) -> Результат;
    створити_текст: (Р: адреса<Розширення>, значення: т8) -> Результат;
    створити_текст_без_копіювання: (Р: адреса<Розширення>, значення: т8) -> Результат;
    створити_юнікод: (Р: адреса<Розширення>, значення: ю32) -> Результат;
    створити_юнікод_без_копіювання: (Р: адреса<Розширення>, значення: ю32) -> Результат;
    створити_юнікод_з_ю8: (Р: адреса<Розширення>, значення: ю8) -> Результат;
    створити_список: (Р: адреса<Розширення>, кількість_елементів: позитивне, елементи: памʼять<адреса<Предмет>>) -> Результат;
    створити_словник: (Р: адреса<Розширення>, кількість_елементів: позитивне, елементи: памʼять<ЕлементСловника>) -> Результат;
    створити_байти: (Р: адреса<Розширення>, розмір: позитивне, дані: памʼять<п8>) -> Результат;
    створити_байти_без_копіювання: (Р: адреса<Розширення>, розмір: позитивне, дані: памʼять<п8>) -> Результат;
    створити_модуль: (Р: адреса<Розширення>, назва: адреса<Предмет>, кількість_елементів: позитивне, елементи: памʼять<ЕлементМодуля>) -> Результат;
    створити_ресурс: (Р: адреса<Розширення>, значення: невідома_адреса, відклик_перед_знищенням: ВідкликПередЗнищеннямРесурсу) -> Результат;
    створити_тип: (Р: адреса<Розширення>, може_бути_пусто: логічне, кількість_допустимих_структур: позитивне, допустимі_структури: памʼять<адреса<Предмет>>) -> Результат;
    створити_параметр: (Р: адреса<Розширення>, назва: адреса<Предмет>, тип: адреса<Предмет>) -> Результат;
    предмет_додати: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_відняти: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_помножити: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_поділити: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_остача: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_частка: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_степінь: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_зсунути_вліво: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_зсунути_вправо: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_беззнаковий_зсув_вправо: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_двійкове_і: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_двійкове_або: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_двійкове_виключне_або: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_двійкове_заперечення: (Р: адреса<Розширення>, предмет: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_менше: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_більше: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_містить: (Р: адреса<Розширення>, предмет: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_числова_негація: (Р: адреса<Розширення>, предмет: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_число: (Р: адреса<Розширення>, предмет: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_текст: (Р: адреса<Розширення>, предмет: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_юнікод: (Р: адреса<Розширення>, предмет: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_перебір: (Р: адреса<Розширення>, предмет: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
    предмет_діапазон: (Р: адреса<Розширення>, предмет: адреса<Предмет>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження) -> Результат;
  }

  дія успіх(Р: адреса<Розширення>, значення: адреса<Предмет>): Результат {
    вернути Результат { позитивне(ні), значення };
  }

  дія падіння(Р: адреса<Розширення>, значення: адреса<Предмет>): Результат {
//    увімкнути_стан_падіння(Р, Місцезнаходження { пусто, 0 });
    вернути Результат { позитивне(так), значення };
  }

  дія змінити_дані(Р: адреса<Розширення>, значення: невідома_адреса) {
    Р.дані = значення;
  }

  дія змінити_відклик_перед_звільненням(Р: адреса<Розширення>, відклик_перед_звільненням: (Р: адреса<Розширення>) -> ніщо) {
    Р.відклик_перед_звільненням = відклик_перед_звільненням;
  }

  дія вивести_ю8(Р: адреса<Розширення>, значення: ю8) {
    Р.вивести_ю8(Р, значення);
  }

  дія надрукувати_ю8(Р: адреса<Розширення>, значення: ю8) {
    Р.надрукувати_ю8(Р, значення);
  }
}