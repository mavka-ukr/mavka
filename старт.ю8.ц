взяти визначення мавка;
взяти визначення мавка/бібліотека;
взяти визначення біб/Реєстр;
взяти визначення біб/турбо;
взяти визначення біб/Друк;

дія відклик_після_події_турбіни(турбіна: адреса<турбо::Турбіна>, аргумент_відклику: невідома_адреса, вихід_помилки: адреса<турбо::ПомилкаВідкликуТурбіни>): логічне {
  змінна обчислювач = аргумент_відклику як адреса<мавка::Обчислювач>;

  змінна результат_обробки = мавка::мавка__обробити_чергу_запланованих_виконань(обчислювач);
  якщо мавка::перевірити_чи_стан_падіння(обчислювач) {
    вихід_помилки::вміст = турбо::ПомилкаВідкликуТурбіни {
      тип = турбо::ТипПомилкиВідкликуТурбіниКористувацький,
      дані = результат_обробки
    };
    вернути ні;
  }

  вернути так;
}

дія змішати_ц64(ключ: ц64, аргумент: невідома_адреса): позитивне {
  вернути п64(ключ) * 11400714819323198485;
}

дія перевірити_ц64(а: ц64, б: ц64, аргумент: невідома_адреса): логічне {
  вернути а == б;
}

зовнішня дія запустити_мавку(кількість_аргументів: ц32, аргументи: памʼять<ю8>): ц32 {
  змінна системний_виділяч = біб::отримати_системний_виділяч();

  змінна турбіна = турбо::створити_турбіну(системний_виділяч);

  турбо::змінити_глобальну_турбіну(турбіна);

  змінна обчислювач = мавка::мавка__створити_обчислювач();

  змінна результат_визначення_глобальних = мавка::мавка__визначити_глобальні(обчислювач);
  якщо мавка::перевірити_чи_стан_падіння(обчислювач) {
    змінна інформація_падіння = мавка::мавка__отримати_інформацію_падіння(обчислювач);
    мавка::мавка__надрукувати_падіння(обчислювач, інформація_падіння, результат_визначення_глобальних);
    мавка::мавка__знищити_інформацію_падіння(обчислювач, інформація_падіння);
    мавка::мавка__знищити_обчислювач(обчислювач);
    турбо::знищити_турбіну(турбіна);
    вернути 1;
  }

  мавка::встановити_обробник_взяття_біб(обчислювач, мавка::бібліотека::обробник_взяття_біб);

  якщо кількість_аргументів == 1 {
    мавка::вивести_ю8(обчислювач, ю8"Діалог Мавки ");
    змінна версія_мавки = мавка::мавка__отримати_версію_мавки_як_т8(обчислювач);
    мавка::надрукувати_т8(обчислювач, версія_мавки);
    мавка::звільнити_памʼять(обчислювач, версія_мавки.дані);
    мавка::мавка__почати_діалог(обчислювач);
  } інакше {
    змінна результат_взяття = мавка::мавка__взяти_файл_шлях_ю8(обчислювач, аргументи[1]);
    якщо мавка::перевірити_чи_стан_падіння(обчислювач) {
      змінна інформація_падіння = мавка::мавка__отримати_інформацію_падіння(обчислювач);
      мавка::мавка__надрукувати_падіння(обчислювач, інформація_падіння, результат_взяття);
      мавка::мавка__знищити_інформацію_падіння(обчислювач, інформація_падіння);
      мавка::мавка__знищити_обчислювач(обчислювач);
      турбо::знищити_турбіну(турбіна);
      вернути 1;
    }

    змінна результат_обробки = мавка::мавка__обробити_чергу_запланованих_виконань(обчислювач);
    якщо мавка::перевірити_чи_стан_падіння(обчислювач) {
      змінна інформація_падіння = мавка::мавка__отримати_інформацію_падіння(обчислювач);
      мавка::мавка__надрукувати_падіння(обчислювач, інформація_падіння, результат_обробки);
      мавка::мавка__знищити_інформацію_падіння(обчислювач, інформація_падіння);
      мавка::мавка__знищити_обчислювач(обчислювач);
      турбо::знищити_турбіну(турбіна);
      вернути 1;
    }
  }

  змінна помилка_турбіни = турбо::ПомилкаВідкликуТурбіни { ... };

  змінна результат_турбіни = турбо::запустити_турбіну(турбіна, пусто, відклик_після_події_турбіни, обчислювач, помилка_турбіни::адреса);
  якщо результат_турбіни == ні {
    якщо помилка_турбіни.тип == турбо::ТипПомилкиВідкликуТурбіниКористувацький {
      змінна інформація_падіння = мавка::мавка__отримати_інформацію_падіння(обчислювач);
      мавка::мавка__надрукувати_падіння(обчислювач, інформація_падіння, помилка_турбіни.дані як адреса<мавка::Предмет>);
      мавка::мавка__знищити_інформацію_падіння(обчислювач, інформація_падіння);
      мавка::мавка__знищити_обчислювач(обчислювач);
      турбо::знищити_турбіну(турбіна);
      вернути 1;
    }
  }

  мавка::мавка__знищити_обчислювач(обчислювач);

  турбо::знищити_турбіну(турбіна);

  вернути 0;
}