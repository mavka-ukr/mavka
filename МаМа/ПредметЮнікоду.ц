взяти визначення МаМа;

секція МаМа {
  дія предмет_юнікоду_виконати_метод_чародія_додати(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо значення == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо додати пусто до юнікоду") як адреса<Предмет>);
    }
    якщо значення.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "До юнікоду можна додати лише юнікод") як адреса<Предмет>);
    }
    ціль предмет_юнікоду_значення = значення як адреса<ПредметЮнікоду>;
    ціль розмір_значення_1 = предмет_юнікоду.значення.розмір;
    ціль розмір_значення_2 = предмет_юнікоду_значення.значення.розмір;
    ціль новий_розмір = розмір_значення_1 + розмір_значення_2;
    ціль нове_значення = виділити_памʼять<п32>(М, новий_розмір + 1);
    змінна позиція: позитивне = 0;
    поки позиція < розмір_значення_1 {
      нове_значення[позиція] = предмет_юнікоду.значення.дані[позиція];
      позиція += 1;
    }
    позиція = 0;
    поки позиція < розмір_значення_2 {
      нове_значення[розмір_значення_1 + позиція] = предмет_юнікоду_значення.значення.дані[позиція];
      позиція += 1;
    }
    нове_значення[новий_розмір] = 0;
    ціль новий_предмет_юнікоду = створити_предмет_юнікоду(М, ю32 { новий_розмір, нове_значення });
    звільнити_памʼять(М, нове_значення);
    вернути новий_предмет_юнікоду як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_містить(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо значення == пусто {
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    якщо значення.тип == М.предмет_структури_число {
      ціль предмет_числа_значення = значення як адреса<ПредметЧисла>;
      ціль символ = п32(предмет_числа_значення.значення);
      змінна позиція: позитивне = 0;
      поки позиція < предмет_юнікоду.значення.розмір {
        якщо предмет_юнікоду.значення.дані[позиція] == символ {
          вернути М.предмет_логічного_так як адреса<Предмет>;
        }
        позиція += 1;
      }
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    якщо значення.тип == М.предмет_структури_юнікод {
      змінна предмет_юнікоду_значення = значення як адреса<ПредметЮнікоду>;
      якщо предмет_юнікоду.значення.розмір == 0 {
        якщо предмет_юнікоду_значення.значення.розмір == 0 {
          вернути М.предмет_логічного_так як адреса<Предмет>;
        }
      }
      змінна позиція: позитивне = 0;
      поки позиція < предмет_юнікоду.значення.розмір {
        змінна позиція_значення: позитивне = 0;
        поки позиція_значення < предмет_юнікоду_значення.значення.розмір {
          якщо предмет_юнікоду.значення.дані[позиція + позиція_значення] != предмет_юнікоду_значення.значення.дані[позиція_значення] {
            стрибнути далі;
          }
          позиція_значення += 1;
        }
        вернути М.предмет_логічного_так як адреса<Предмет>;
        далі:
        позиція += 1;
      }
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_зображення(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_текст(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_юнікод(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_байти(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна значення_ю8 = ю8 { 0, пусто };
    якщо перекодувати_ю32_в_ю8(М, предмет_юнікоду.значення, значення_ю8::адреса, ні) == ні {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не вдалось перекодувати юнікод в ю8") як адреса<Предмет>);
    }
    вернути створити_предмет_байтів_без_копіювання(М, значення_ю8.розмір, значення_ю8.дані) як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_буфер(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна значення_ю8 = ю8 { 0, пусто };
    якщо перекодувати_ю32_в_ю8(М, предмет_юнікоду.значення, значення_ю8::адреса, ні) == ні {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не вдалось перекодувати юнікод в ю8") як адреса<Предмет>);
    }
    вернути створити_предмет_буфера_без_копіювання(М, значення_ю8.розмір, значення_ю8.дані) як адреса<Предмет>;
  }

  дія предмет_юнікоду_виконати_метод_чародія_отримати_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<ПредметЧисла>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль позиція = позитивне(ключ.значення);
    якщо предмет_юнікоду.значення.розмір > позиція {
      вернути створити_предмет_числа(М, д64(предмет_юнікоду.значення.дані[позиція])) як адреса<Предмет>;
    }
    вернути пусто;
  }

  дія предмет_юнікоду_виконати_метод_чародія_перебір(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_перебору_юнікоду(М, предмет_юнікоду) як адреса<Предмет>;
  }
}

секція МаМа {
  дія записати_параметр_структури_юнікод_довжина(М: адреса<Машина>) {
    ціль допустимі_структури_типу_параметра_довжина = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_довжина[0] = М.предмет_структури_число;
    ціль тип_параметра_довжина = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_довжина });
    ціль параметр_довжина = створити_предмет_параметра(М, назва(М, "довжина"), тип_параметра_довжина, пусто);
    М.предмет_структури_юнікод.параметри.дані[0] = параметр_довжина;
  }

  дія рідна_дія_метода_чародія_містить(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_містить\" не для юнікоду") як адреса<Предмет>);
    }
    змінна аргумент_значення: адреса<МаМа::Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_значення = МаМа::знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, МаМа::назва(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_значення == ні {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_містить(М, предмет_юнікоду, аргумент_значення, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_містить(М: адреса<Машина>) {
    ціль параметр_значення = МаМа::створити_предмет_параметра(М, МаМа::назва(М, "значення"), пусто, пусто);
    ціль дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<МаМа::ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_значення;
    ціль предмет_дії_метода_чародія_містить = створити_предмет_рідної_дії(М, назва(М, "чародія_містить"), Послідовність<адреса<ПредметПараметра>> { 1, дані_параметрів_дії_дізнатись_структуру }, пусто, рідна_дія_метода_чародія_містить, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_містить"), предмет_дії_метода_чародія_містить);
  }

  дія рідна_дія_метода_чародія_додати(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_додати\" не для юнікоду") як адреса<Предмет>);
    }
    змінна аргумент_значення: адреса<МаМа::Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_значення = МаМа::знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, МаМа::назва(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_значення == ні {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_додати(М, предмет_юнікоду, аргумент_значення, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_додати(М: адреса<Машина>) {
    ціль параметр_значення = МаМа::створити_предмет_параметра(М, МаМа::назва(М, "значення"), пусто, пусто);
    ціль дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<МаМа::ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_значення;
    ціль предмет_дії_метода_чародія_додати = створити_предмет_рідної_дії(М, назва(М, "чародія_додати"), Послідовність<адреса<ПредметПараметра>> { 1, дані_параметрів_дії_дізнатись_структуру }, пусто, рідна_дія_метода_чародія_додати, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_додати"), предмет_дії_метода_чародія_додати);
  }

  дія рідна_дія_метода_чародія_зображення(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_зображення\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_зображення(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_зображення(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_зображення = створити_предмет_рідної_дії(М, назва(М, "чародія_зображення"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_зображення, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_зображення"), предмет_дії_метода_чародія_зображення);
  }

  дія рідна_дія_метода_чародія_текст(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_текст\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_текст(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_текст(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_текст = створити_предмет_рідної_дії(М, назва(М, "чародія_текст"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_текст, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_текст"), предмет_дії_метода_чародія_текст);
  }

  дія рідна_дія_метода_чародія_юнікод(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_юнікод\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_юнікод(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_юнікод(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_юнікод = створити_предмет_рідної_дії(М, назва(М, "чародія_юнікод"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_юнікод, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_юнікод"), предмет_дії_метода_чародія_юнікод);
  }

  дія рідна_дія_метода_чародія_байти(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_байти\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_байти(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_байти(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_байти = створити_предмет_рідної_дії(М, назва(М, "чародія_байти"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_байти, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_байти"), предмет_дії_метода_чародія_байти);
  }

  дія рідна_дія_метода_чародія_буфер(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_буфер\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_буфер(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_буфер(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_буфер = створити_предмет_рідної_дії(М, назва(М, "чародія_буфер"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_буфер, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_буфер"), предмет_дії_метода_чародія_буфер);
  }

  дія рідна_дія_метода_чародія_отримати_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_отримати_елемент\" не для юнікоду") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<МаМа::Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_ключ = МаМа::знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, МаМа::назва(М, "ключ"), аргумент_ключ::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_отримати_елемент(М, предмет_юнікоду, аргумент_ключ як адреса<ПредметЧисла>, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_отримати_елемент(М: адреса<Машина>) {
    ціль допустимі_структури_типу_параметра_ключ = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_ключ[0] = М.предмет_структури_число;
    ціль тип_параметра_ключ = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_ключ });
    ціль параметр_ключ = створити_предмет_параметра(М, назва(М, "ключ"), тип_параметра_ключ, пусто);
    ціль дані_параметрів_дії_дізнатись_структуру = виділити_памʼять<адреса<МаМа::ПредметПараметра>>(М, 1);
    дані_параметрів_дії_дізнатись_структуру[0] = параметр_ключ;
    ціль предмет_дії_метода_чародія_отримати_елемент = створити_предмет_рідної_дії(М, назва(М, "чародія_отримати_елемент"), Послідовність<адреса<ПредметПараметра>> { 1, дані_параметрів_дії_дізнатись_структуру }, пусто, рідна_дія_метода_чародія_отримати_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_отримати_елемент"), предмет_дії_метода_чародія_отримати_елемент);
  }

  дія рідна_дія_метода_чародія_перебір(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_перебір\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_перебір(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_перебір(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_перебір = створити_предмет_рідної_дії(М, назва(М, "чародія_перебір"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_перебір, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_перебір"), предмет_дії_метода_чародія_перебір);
  }

  зовнішня дія заповнити_предмет_структури_юнікод(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_юнікод_довжина(М);

    // методи
    записати_метод_структури_юнікод_чародія_додати(М);
    записати_метод_структури_юнікод_чародія_містить(М);
    записати_метод_структури_юнікод_чародія_зображення(М);
    записати_метод_структури_юнікод_чародія_текст(М);
    записати_метод_структури_юнікод_чародія_юнікод(М);
    записати_метод_структури_юнікод_чародія_байти(М);
    записати_метод_структури_юнікод_чародія_буфер(М);
    записати_метод_структури_юнікод_чародія_отримати_елемент(М);
    записати_метод_структури_юнікод_чародія_перебір(М);
  }

  зовнішня дія виконати_предмет_структури_юнікод(М: адреса<Машина>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_значення == ні {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    якщо знайдено_аргумент_значення == ні {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Пропущено аргумент \"значення\"") як адреса<Предмет>);
    }
    якщо аргумент_значення == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо отримати юнікод з пусто") як адреса<Предмет>);
    }
    вернути предмет_виконати_властивість(М, аргумент_значення, назва(М, "чародія_юнікод"), кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія створити_предмет_юнікоду(М: адреса<Машина>, значення: ю32): адреса<ПредметЮнікоду> {
    ціль предмет_юнікоду = створити_предмет<ПредметЮнікоду>(М, М.предмет_структури_юнікод);
    якщо виділити_копію_ю32(М, значення, предмет_юнікоду.значення::адреса) == ні {
      ПОМЕРТИ(М, "Не вдалось виділити копію ю32!");
      вернути пусто;
    }
    вернути предмет_юнікоду;
  }

  зовнішня дія створити_предмет_юнікоду_без_копіювання(М: адреса<Машина>, значення: ю32): адреса<ПредметЮнікоду> {
    ціль предмет_юнікоду = створити_предмет<ПредметЮнікоду>(М, М.предмет_структури_юнікод);
    предмет_юнікоду.значення = значення;
    вернути предмет_юнікоду;
  }

  зовнішня дія створити_предмет_юнікоду_з_ю8(М: адреса<Машина>, значення: ю8): адреса<ПредметЮнікоду> {
    ціль предмет_юнікоду = створити_предмет<ПредметЮнікоду>(М, М.предмет_структури_юнікод);
    якщо перекодувати_ю8_в_ю32(М, значення, предмет_юнікоду.значення::адреса, ні) == ні {
      ПОМЕРТИ(М, "Не вдалось перекодувати ю8 в ю32!");
      вернути пусто;
    }
    вернути предмет_юнікоду;
  }

  зовнішня дія предмет_юнікоду_виконати(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_виконати"), кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_отримати_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, МаМа::назва(М, "довжина")) {
      вернути створити_предмет_числа(М, д64(предмет_юнікоду.значення.розмір)) як адреса<Предмет>;
    }
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_юнікоду.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  зовнішня дія предмет_юнікоду_змінити_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  зовнішня дія предмет_юнікоду_видалити_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_виконати_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль предмет_властивості = предмет_юнікоду_отримати_властивість(М, предмет_юнікоду, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета юнікоду \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      ціль предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_юнікоду як адреса<Предмет>, кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_додати(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_додати(М, предмет_юнікоду, аргумент, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_відняти(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_помножити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_поділити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_остача(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_неповна_частка(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_степінь(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_зсунути_вліво(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_зсунути_вправо(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_зсунути_вправо_2(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_двійкове_і(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_двійкове_або(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_двійкове_виключне_або(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_двійкове_заперечення(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_двійкове_заперечення"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_менше(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_більше(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_містить(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_містить(М, предмет_юнікоду, аргумент, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_числова_негація(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_числова_негація"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_отримати_число(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_число"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_збільшити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_збільшити"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_зменшити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_зменшити"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_зображення(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_зображення(М, предмет_юнікоду, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_текст(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_текст(М, предмет_юнікоду, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_юнікод(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_отримати_байти(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_байти(М, предмет_юнікоду, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_отримати_буфер(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_буфер(М, предмет_юнікоду, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_отримати_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо ключ == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента з юнікоду має бути числом") як адреса<Предмет>);
    }
    якщо ключ.тип != М.предмет_структури_число {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента з юнікоду має бути числом") як адреса<Предмет>);
    }
    вернути предмет_юнікоду_виконати_метод_чародія_отримати_елемент(М, предмет_юнікоду, ключ як адреса<ПредметЧисла>, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_змінити_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_змінити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_видалити_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_отримати_перебір(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду_виконати_метод_чародія_перебір(М, предмет_юнікоду, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_отримати_діапазон(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    ціль результат = предмет_юнікоду_виконати_властивість(М, предмет_юнікоду, назва(М, "чародія_діапазон"), 2, аргументи, 0, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}