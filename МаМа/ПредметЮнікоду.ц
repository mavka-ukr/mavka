взяти визначення МаМа;

секція МаМа {
  дія предмет_юнікоду_виконати_метод_чародія_перебір(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_перебору_юнікоду(М, предмет_юнікоду) як адреса<Предмет>;
  }
}

секція МаМа {
  дія записати_параметр_структури_юнікод_довжина(М: адреса<Машина>) {
    ціль допустимі_структури_типу_параметра_довжина = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_довжина[0] = М.предмет_структури_число;
    ціль тип_параметра_довжина = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_довжина });
    ціль параметр_довжина = створити_предмет_параметра(М, назва(М, "довжина"), тип_параметра_довжина, пусто);
    М.предмет_структури_юнікод.параметри.дані[0] = параметр_довжина;
  }

  дія рідна_дія_метода_чародія_перебір(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_перебір\" не для юнікоду") як адреса<Предмет>);
    }
    ціль предмет_юнікоду = предмет_я як адреса<ПредметЮнікоду>;
    вернути предмет_юнікоду_виконати_метод_чародія_перебір(М, предмет_юнікоду, місцезнаходження);
  }

  дія записати_метод_структури_юнікод_чародія_перебір(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_перебір = створити_предмет_рідної_дії(М, назва(М, "чародія_перебір"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_перебір, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_юнікод, назва(М, "чародія_перебір"), предмет_дії_метода_чародія_перебір);
  }

  зовнішня дія заповнити_предмет_структури_юнікод(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_юнікод_довжина(М);

    // методи
    записати_метод_структури_юнікод_чародія_перебір(М);
  }

  зовнішня дія створити_предмет_юнікоду(М: адреса<Машина>, значення: ю32): адреса<ПредметЮнікоду> {
    ціль предмет_юнікоду = створити_предмет<ПредметЮнікоду>(М, М.предмет_структури_юнікод);
    якщо виділити_копію_ю32(М, значення, предмет_юнікоду.значення::адреса) == ні {
      ПОМЕРТИ(М, "Не вдалось виділити копію ю32!");
      вернути пусто;
    }
    вернути предмет_юнікоду;
  }

  зовнішня дія створити_предмет_юнікоду_з_ю8(М: адреса<Машина>, значення: ю8): адреса<ПредметЮнікоду> {
    ціль предмет_юнікоду = створити_предмет<ПредметЮнікоду>(М, М.предмет_структури_юнікод);
    якщо перекодувати_ю8_в_ю32(М, значення, предмет_юнікоду.значення::адреса, ні) == ні {
      ПОМЕРТИ(М, "Не вдалось перекодувати ю8 в ю32!");
      вернути пусто;
    }
    вернути предмет_юнікоду;
  }

  зовнішня дія предмет_юнікоду_виконати(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_отримати_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, МаМа::назва(М, "довжина")) {
      вернути створити_предмет_числа(М, д64(предмет_юнікоду.значення.розмір)) як адреса<Предмет>;
    }
    змінна ціль метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_юнікоду.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  зовнішня дія предмет_юнікоду_змінити_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_видалити_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_виконати_властивість(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль предмет_властивості = предмет_юнікоду_отримати_властивість(М, предмет_юнікоду, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_юнікоду як адреса<Предмет>, кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_юнікоду_додати(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо аргумент == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо додати пусто до юнікоду") як адреса<Предмет>);
    }
    якщо аргумент.тип != М.предмет_структури_юнікод {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "До юнікоду можна додати лише юнікод") як адреса<Предмет>);
    }
    ціль предмет_юнікоду_аргумента = аргумент як адреса<ПредметЮнікоду>;
    ціль розмір_значення_1 = предмет_юнікоду.значення.розмір;
    ціль розмір_значення_2 = предмет_юнікоду_аргумента.значення.розмір;
    ціль новий_розмір = розмір_значення_1 + розмір_значення_2;
    ціль нове_значення = виділити_памʼять<п32>(М, новий_розмір + 1);
    змінна ціль позиція: позитивне = 0;
    поки позиція < розмір_значення_1 {
      нове_значення[позиція] = предмет_юнікоду.значення.дані[позиція];
      позиція += 1;
    }
    позиція = 0;
    поки позиція < розмір_значення_2 {
      нове_значення[розмір_значення_1 + позиція] = предмет_юнікоду_аргумента.значення.дані[позиція];
      позиція += 1;
    }
    нове_значення[новий_розмір] = 0;
    ціль новий_предмет_юнікоду = створити_предмет_юнікоду(М, ю32 { новий_розмір, нове_значення });
    звільнити_памʼять(М, нове_значення);
    вернути новий_предмет_юнікоду як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_відняти(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_помножити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_поділити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_остача(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_частка(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_степінь(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_зсунути_вліво(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_зсунути_вправо(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_зсунути_вправо_зі_заповненням(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_двійкове_і(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_двійкове_або(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_двійкове_виключне_або(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_двійкове_заперечення(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_менше(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_більше(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_містить(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо аргумент == пусто {
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    якщо аргумент.тип == М.предмет_структури_число {
      ціль предмет_числа_аргумента = аргумент як адреса<ПредметЧисла>;
      ціль символ = п32(предмет_числа_аргумента.значення);
      змінна ціль позиція: позитивне = 0;
      поки позиція < предмет_юнікоду.значення.розмір {
        якщо предмет_юнікоду.значення.дані[позиція] == символ {
          вернути М.предмет_логічного_так як адреса<Предмет>;
        }
        позиція += 1;
      }
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    якщо аргумент.тип == М.предмет_структури_юнікод {
      змінна ціль предмет_юнікоду_аргумента = аргумент як адреса<ПредметЮнікоду>;
      якщо предмет_юнікоду.значення.розмір == 0 {
        якщо предмет_юнікоду_аргумента.значення.розмір == 0 {
          вернути М.предмет_логічного_так як адреса<Предмет>;
        }
      }
      змінна ціль позиція: позитивне = 0;
      поки позиція < предмет_юнікоду.значення.розмір {
        змінна ціль позиція_аргумента: позитивне = 0;
        поки позиція_аргумента < предмет_юнікоду_аргумента.значення.розмір {
          якщо предмет_юнікоду.значення.дані[позиція + позиція_аргумента] != предмет_юнікоду_аргумента.значення.дані[позиція_аргумента] {
            стрибнути далі;
          }
          позиція_аргумента += 1;
        }
        вернути М.предмет_логічного_так як адреса<Предмет>;
        далі:
        позиція += 1;
      }
      вернути М.предмет_логічного_ні як адреса<Предмет>;
    }
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_мінусове(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_число(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_збільшити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_зменшити(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_текст(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, "<юнікод>") як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_юнікод(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_юнікоду як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_отримати_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо ключ == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента зі списку має бути числом") як адреса<Предмет>);
    }
    якщо ключ.тип != М.предмет_структури_число {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента зі списку має бути числом") як адреса<Предмет>);
    }
    ціль предмет_числа = ключ як адреса<ПредметЧисла>;
    ціль позиція = позитивне(предмет_числа.значення);
    якщо предмет_юнікоду.значення.розмір > позиція {
      вернути створити_предмет_числа(М, д64(предмет_юнікоду.значення.дані[позиція])) як адреса<Предмет>;
    }
    вернути пусто;
  }

  зовнішня дія предмет_юнікоду_змінити_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_видалити_елемент(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }

  зовнішня дія предмет_юнікоду_отримати_перебір(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_перебору_юнікоду(М, предмет_юнікоду) як адреса<Предмет>;
  }

  зовнішня дія предмет_юнікоду_отримати_діапазон(М: адреса<Машина>, предмет_юнікоду: адреса<ПредметЮнікоду>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути результат_стан_падіння(М, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 }, створити_предмет_тексту(М, "Не втілено") як адреса<Предмет>);
  }
}