взяти визначення МаМа;

секція МаМа {
  дія предмет_буфера_виконати_метод_чародія_отримати_елемент(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, ключ: адреса<ПредметЧисла>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль позиція = позитивне(ключ.значення);
    якщо предмет_буфера.значення.розмір > позиція {
      вернути створити_предмет_числа(М, д64(предмет_буфера.значення.дані[позиція])) як адреса<Предмет>;
    }
    вернути пусто;
  }

  дія предмет_буфера_виконати_метод_чародія_змінити_елемент(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, ключ: адреса<ПредметЧисла>, значення: адреса<ПредметЧисла>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль позиція = позитивне(ключ.значення);
    ціль байт = п8(значення.значення);
    якщо предмет_буфера.значення.розмір > позиція {
      предмет_буфера.значення.дані[позиція] = байт;
    }
    вернути значення як адреса<Предмет>;
  }

  дія предмет_буфера_виконати_метод_чародія_перебір(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_перебору_буфера(М, предмет_буфера) як адреса<Предмет>;
  }

  дія предмет_буфера_виконати_метод_чародія_текст(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_тексту(М, т8 { предмет_буфера.значення.розмір, предмет_буфера.значення.дані }) як адреса<Предмет>;
  }

  дія предмет_буфера_виконати_метод_чародія_юнікод(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути створити_предмет_юнікоду_з_ю8(М, ю8 { предмет_буфера.значення.розмір, предмет_буфера.значення.дані }) як адреса<Предмет>;
  }

  дія предмет_буфера_виконати_метод_чародія_байти(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  дія предмет_буфера_виконати_метод_чародія_буфер(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера як адреса<Предмет>;
  }

  дія предмет_буфера_виконати_дію_структури_виділити(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, предмет_розміру: адреса<ПредметЧисла>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль розмір = позитивне(предмет_розміру.значення);
    вернути створити_предмет_буфера_0(М, розмір) як адреса<Предмет>;
  }

  дія предмет_буфера_виконати_дію_структури_обʼєднати(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, предмет_списку: адреса<ПредметСписку>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна п: позитивне = 0;
    змінна розмір: позитивне = 0;
    поки п < предмет_списку.елементи.розмір {
      якщо предмет_списку.елементи.дані[п].тип == М.предмет_структури_байти {
        ціль предмет_байтів = предмет_списку.елементи.дані[п] як адреса<ПредметБайтів>;
        розмір += предмет_байтів.розмір;
      } інакше якщо предмет_списку.елементи.дані[п].тип == М.предмет_структури_Буфер {
        ціль предмет_буфера = предмет_списку.елементи.дані[п] як адреса<ПредметБуфера>;
        розмір += предмет_буфера.значення.розмір;
      } інакше {
        вернути пусто; // потім: помилка
      }
      п += 1;
    }
    п = 0;
    змінна дані = виділити_памʼять<п8>(М, розмір);
    змінна дп: позитивне = 0;
    поки п < предмет_списку.елементи.розмір {
      змінна пп: позитивне = 0;
      якщо предмет_списку.елементи.дані[п].тип == М.предмет_структури_байти {
        ціль предмет_байтів = предмет_списку.елементи.дані[п] як адреса<ПредметБайтів>;
        поки пп < предмет_байтів.розмір {
          дані[дп] = предмет_байтів.дані[пп];
          пп += 1;
          дп += 1;
        }
      } інакше якщо предмет_списку.елементи.дані[п].тип == М.предмет_структури_Буфер {
        ціль предмет_буфера = предмет_списку.елементи.дані[п] як адреса<ПредметБуфера>;
        поки пп < предмет_буфера.значення.розмір {
          дані[дп] = предмет_буфера.значення.дані[пп];
          пп += 1;
          дп += 1;
        }
      } інакше {
        вернути пусто; // потім: помилка
      }
      п += 1;
    }
    вернути створити_предмет_буфера_без_копіювання(М, розмір, дані) як адреса<Предмет>;
  }
}

секція МаМа {
  дія записати_параметр_структури_Буфер_розмір(М: адреса<Машина>) {
    ціль допустимі_структури_типу_параметра_розмір = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_розмір[0] = М.предмет_структури_число;
    ціль тип_параметра_розмір = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_розмір });
    ціль параметр_розмір = створити_предмет_параметра(М, назва(М, "розмір"), тип_параметра_розмір, пусто);
    М.предмет_структури_Буфер.параметри.дані[0] = параметр_розмір;
  }

  дія рідна_дія_метода_чародія_отримати_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_отримати_елемент\" не для буфера") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_ключ = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "ключ"), аргумент_ключ::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_отримати_елемент(М, предмет_буфера, аргумент_ключ як адреса<ПредметЧисла>, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_отримати_елемент(М: адреса<Машина>) {
    ціль допустимі_структури_типу_параметра_ключ = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_ключ[0] = М.предмет_структури_число;
    ціль тип_параметра_ключ = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_ключ });
    ціль параметр_ключ = створити_предмет_параметра(М, назва(М, "ключ"), тип_параметра_ключ, пусто);
    ціль дані_параметрів_метода_чародія_отримати_елемент = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_метода_чародія_отримати_елемент[0] = параметр_ключ;
    ціль предмет_дії_метода_чародія_отримати_елемент = створити_предмет_рідної_дії(М, назва(М, "чародія_отримати_елемент"), Послідовність<адреса<ПредметПараметра>> { 1, дані_параметрів_метода_чародія_отримати_елемент }, пусто, рідна_дія_метода_чародія_отримати_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_отримати_елемент"), предмет_дії_метода_чародія_отримати_елемент);
  }

  дія рідна_дія_метода_чародія_змінити_елемент(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_змінити_елемент\" не для буфера") як адреса<Предмет>);
    }
    змінна аргумент_ключ: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_ключ = ні;
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_ключ = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "ключ"), аргумент_ключ::адреса);
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_ключ == ні {
        аргумент_ключ = аргументи[0];
        знайдено_аргумент_ключ = так;
      }
      якщо кількість_аргументів > 1 {
        якщо знайдено_аргумент_значення == ні {
          аргумент_значення = аргументи[1];
          знайдено_аргумент_значення = так;
        }
      }
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_змінити_елемент(М, предмет_буфера, аргумент_ключ як адреса<ПредметЧисла>, аргумент_значення як адреса<ПредметЧисла>, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_змінити_елемент(М: адреса<Машина>) {
    ціль допустимі_структури_типу_параметра_ключ = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_ключ[0] = М.предмет_структури_число;
    ціль тип_параметра_ключ = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_ключ });
    ціль параметр_ключ = створити_предмет_параметра(М, назва(М, "ключ"), тип_параметра_ключ, пусто);
    ціль допустимі_структури_типу_параметра_значення = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_значення[0] = М.предмет_структури_число;
    ціль тип_параметра_значення = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_значення });
    ціль параметр_значення = створити_предмет_параметра(М, назва(М, "значення"), тип_параметра_значення, пусто);
    ціль кількість_параметів: позитивне = 2;
    ціль дані_параметрів = виділити_памʼять<адреса<ПредметПараметра>>(М, кількість_параметів);
    дані_параметрів[0] = параметр_ключ;
    дані_параметрів[1] = параметр_значення;
    ціль предмет_дії = створити_предмет_рідної_дії(М, назва(М, "чародія_змінити_елемент"), Послідовність<адреса<ПредметПараметра>> { кількість_параметів, дані_параметрів }, пусто, рідна_дія_метода_чародія_змінити_елемент, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_змінити_елемент"), предмет_дії);
  }

  дія рідна_дія_метода_чародія_перебір(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_перебір\" не для буфера") як адреса<Предмет>);
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_перебір(М, предмет_буфера, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_перебір(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_перебір = створити_предмет_рідної_дії(М, назва(М, "чародія_перебір"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_перебір, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_перебір"), предмет_дії_метода_чародія_перебір);
  }

  дія рідна_дія_метода_чародія_текст(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_текст\" не для буфера") як адреса<Предмет>);
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_текст(М, предмет_буфера, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_текст(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_текст = створити_предмет_рідної_дії(М, назва(М, "чародія_текст"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_текст, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_текст"), предмет_дії_метода_чародія_текст);
  }

  дія рідна_дія_метода_чародія_юнікод(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_юнікод\" не для буфера") як адреса<Предмет>);
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_юнікод(М, предмет_буфера, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_юнікод(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_юнікод = створити_предмет_рідної_дії(М, назва(М, "чародія_юнікод"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_юнікод, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_юнікод"), предмет_дії_метода_чародія_юнікод);
  }

  дія рідна_дія_метода_чародія_байти(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_байти\" не для буфера") як адреса<Предмет>);
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_байти(М, предмет_буфера, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_байти(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_байти = створити_предмет_рідної_дії(М, назва(М, "чародія_байти"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_байти, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_байти"), предмет_дії_метода_чародія_байти);
  }

  дія рідна_дія_метода_чародія_буфер(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо предмет_я.тип != М.предмет_структури_Буфер {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо виконати дію \"чародія_буфер\" не для буфера") як адреса<Предмет>);
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_метод_чародія_буфер(М, предмет_буфера, місцезнаходження);
  }

  дія записати_метод_структури_Буфер_чародія_буфер(М: адреса<Машина>) {
    ціль предмет_дії_метода_чародія_буфер = створити_предмет_рідної_дії(М, назва(М, "чародія_буфер"), Послідовність<адреса<ПредметПараметра>> { 0, пусто }, пусто, рідна_дія_метода_чародія_буфер, пусто, пусто, пусто);
    предмет_структури_записати_метод(М, М.предмет_структури_Буфер, назва(М, "чародія_буфер"), предмет_дії_метода_чародія_буфер);
  }

  дія рідна_дія_структури_Буфер_виділити(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргумент_розмір: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_розмір = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_розмір = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "розмір"), аргумент_розмір::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_розмір == ні {
        аргумент_розмір = аргументи[0];
        знайдено_аргумент_розмір = так;
      }
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_дію_структури_виділити(М, предмет_буфера, аргумент_розмір як адреса<ПредметЧисла>, місцезнаходження);
  }

  дія записати_дію_структури_Буфер_виділити(М: адреса<Машина>): предмет_або_стан_падіння {
    ціль допустимі_структури_типу_параметра_розмір = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_розмір[0] = М.предмет_структури_число;
    ціль тип_параметра_розмір = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_розмір });
    ціль параметр_розмір = створити_предмет_параметра(М, назва(М, "розмір"), тип_параметра_розмір, пусто);
    ціль дані_параметрів_дії_виділити = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_виділити[0] = параметр_розмір;
    ціль предмет_дії_виділити = створити_предмет_рідної_дії(М, назва(М, "виділити"), Послідовність<адреса<ПредметПараметра>> { 1, дані_параметрів_дії_виділити }, пусто, рідна_дія_структури_Буфер_виділити, пусто, пусто, пусто);
    вернути предмет_структури_змінити_властивість(М, М.предмет_структури_Буфер, назва(М, "виділити"), предмет_дії_виділити як адреса<Предмет>, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 });
  }

  дія рідна_дія_структури_Буфер_обʼєднати(М: адреса<Машина>, предмет_дії: адреса<ПредметДії>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргумент_дані: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_дані = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_дані = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "дані"), аргумент_дані::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_дані == ні {
        аргумент_дані = аргументи[0];
        знайдено_аргумент_дані = так;
      }
    }
    ціль предмет_буфера = предмет_я як адреса<ПредметБуфера>;
    вернути предмет_буфера_виконати_дію_структури_обʼєднати(М, предмет_буфера, аргумент_дані як адреса<ПредметСписку>, місцезнаходження);
  }

  дія записати_дію_структури_Буфер_обʼєднати(М: адреса<Машина>): предмет_або_стан_падіння {
    ціль допустимі_структури_типу_параметра_дані = виділити_памʼять<адреса<ПредметСтруктури>>(М, 1);
    допустимі_структури_типу_параметра_дані[0] = М.предмет_структури_список;
    ціль тип_параметра_дані = створити_предмет_типу(М, ні, Послідовність<адреса<ПредметСтруктури>> { 1, допустимі_структури_типу_параметра_дані });
    ціль параметр_дані = створити_предмет_параметра(М, назва(М, "дані"), тип_параметра_дані, пусто);
    ціль дані_параметрів_дії_обʼєднати = виділити_памʼять<адреса<ПредметПараметра>>(М, 1);
    дані_параметрів_дії_обʼєднати[0] = параметр_дані;
    ціль предмет_дії_обʼєднати = створити_предмет_рідної_дії(М, назва(М, "обʼєднати"), Послідовність<адреса<ПредметПараметра>> { 1, дані_параметрів_дії_обʼєднати }, пусто, рідна_дія_структури_Буфер_обʼєднати, пусто, пусто, пусто);
    вернути предмет_структури_змінити_властивість(М, М.предмет_структури_Буфер, назва(М, "обʼєднати"), предмет_дії_обʼєднати як адреса<Предмет>, Місцезнаходження { пусто як адреса<ПредметТексту>, 0 });
  }

  зовнішня дія заповнити_предмет_структури_Буфер(М: адреса<Машина>) {
    // параметри
    записати_параметр_структури_Буфер_розмір(М);

    // методи
    записати_метод_структури_Буфер_чародія_отримати_елемент(М);
    записати_метод_структури_Буфер_чародія_змінити_елемент(М);
    записати_метод_структури_Буфер_чародія_перебір(М);
    записати_метод_структури_Буфер_чародія_текст(М);
    записати_метод_структури_Буфер_чародія_юнікод(М);
    записати_метод_структури_Буфер_чародія_байти(М);
    записати_метод_структури_Буфер_чародія_буфер(М);

    // спец
    змінна результат_запису_дії = записати_дію_структури_Буфер_виділити(М);
    якщо М.стан_падіння == позитивне(так) {
      // потім: помилка
    }
    результат_запису_дії = записати_дію_структури_Буфер_обʼєднати(М);
    якщо М.стан_падіння == позитивне(так) {
      // потім: помилка
    }
  }

  зовнішня дія виконати_предмет_структури_Буфер(М: адреса<Машина>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    змінна аргумент_значення: адреса<Предмет> = пусто;
    змінна знайдено_аргумент_значення = ні;
    якщо кількість_іменованих_аргументів > 0 {
      знайдено_аргумент_значення = знайти_іменований_аргумент(М, кількість_іменованих_аргументів, іменовані_аргументи, назва(М, "значення"), аргумент_значення::адреса);
    }
    якщо кількість_аргументів > 0 {
      якщо знайдено_аргумент_значення == ні {
        аргумент_значення = аргументи[0];
        знайдено_аргумент_значення = так;
      }
    }
    якщо знайдено_аргумент_значення == ні {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Пропущено аргумент \"значення\"") як адреса<Предмет>);
    }
    якщо аргумент_значення == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Неможливо отримати буфер з пусто") як адреса<Предмет>);
    }
    вернути предмет_виконати_властивість(М, аргумент_значення, назва(М, "чародія_буфер"), кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія створити_предмет_буфера(М: адреса<Машина>, розмір: позитивне, дані: памʼять<п8>): адреса<ПредметБуфера> {
    ціль предмет_буфера = створити_предмет<ПредметБуфера>(М, М.предмет_структури_Буфер);
    предмет_буфера.значення.розмір = розмір;
    предмет_буфера.значення.вмісткість = розмір;
    якщо виділити_копію_памʼяті(М, розмір, дані, предмет_буфера.значення.дані::адреса) == ні {
      ПОМЕРТИ(М, "Не вдалось виділити копію памʼяті!");
      вернути пусто;
    }
    вернути предмет_буфера;
  }

  зовнішня дія створити_предмет_буфера_без_копіювання(М: адреса<Машина>, розмір: позитивне, дані: памʼять<п8>): адреса<ПредметБуфера> {
    ціль предмет_буфера = створити_предмет<ПредметБуфера>(М, М.предмет_структури_Буфер);
    предмет_буфера.значення.вмісткість = розмір;
    предмет_буфера.значення.розмір = розмір;
    предмет_буфера.значення.дані = дані;
    вернути предмет_буфера;
  }

  зовнішня дія створити_предмет_буфера_0(М: адреса<Машина>, розмір: позитивне): адреса<ПредметБуфера> {
    ціль предмет_буфера = створити_предмет<ПредметБуфера>(М, М.предмет_структури_Буфер);
    предмет_буфера.значення.вмісткість = розмір;
    предмет_буфера.значення.розмір = розмір;
    предмет_буфера.значення.дані = виділити_памʼять<п8>(М, розмір);
    змінна п: позитивне = 0;
    поки п < розмір {
      предмет_буфера.значення.дані[п] = 0;
      п += 1;
    }
    вернути предмет_буфера;
  }

  зовнішня дія предмет_буфера_виконати(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, предмет_я: адреса<Предмет>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_виконати"), кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_буфера_отримати_властивість(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо перевірити_чи_предмети_назви_рівні(М, назва, МаМа::назва(М, "розмір")) {
      вернути створити_предмет_числа(М, д64(предмет_буфера.значення.розмір)) як адреса<Предмет>;
    }
    змінна метод: адреса<ПредметДії> = пусто;
    якщо знайти_метод_в_структурі(М, предмет_буфера.тип, назва, метод::адреса) {
      вернути метод як адреса<Предмет>;
    }
    вернути пусто;
  }

  зовнішня дія предмет_буфера_змінити_властивість(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, назва: адреса<ПредметТексту>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  зовнішня дія предмет_буфера_видалити_властивість(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, назва: адреса<ПредметТексту>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути М.предмет_логічного_ні як адреса<Предмет>;
  }

  зовнішня дія предмет_буфера_виконати_властивість(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, назва: адреса<ПредметТексту>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<Предмет>>, кількість_іменованих_аргументів: позитивне, іменовані_аргументи: памʼять<ІменованийАргумент>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль предмет_властивості = предмет_буфера_отримати_властивість(М, предмет_буфера, назва, місцезнаходження);
    якщо М.стан_падіння == позитивне(так) {
      вернути предмет_властивості;
    }
    якщо предмет_властивості == пусто {
      змінна накопичувач_т8_помилки = зробити_накопичувач<п8>(М);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "Неможливо виконати пусту властивість предмета буфера \"");
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, назва.значення);
      покласти_в_накопичувач_т8(М, накопичувач_т8_помилки::адреса, "\"");
      ціль предмет_помилки = створити_предмет_тексту(М, т8 { накопичувач_т8_помилки.розмір, накопичувач_т8_помилки.дані });
      звільнити_памʼять(М, накопичувач_т8_помилки.дані);
      вернути результат_стан_падіння(М, місцезнаходження, предмет_помилки як адреса<Предмет>);
    }
    вернути предмет_виконати(М, предмет_властивості, предмет_буфера як адреса<Предмет>, кількість_аргументів, аргументи, кількість_іменованих_аргументів, іменовані_аргументи, місцезнаходження);
  }

  зовнішня дія предмет_буфера_додати(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_додати"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_відняти(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_відняти"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_помножити(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_помножити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_поділити(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_поділити"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_остача(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_остача"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_неповна_частка(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_неповна_частка"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_степінь(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_степінь"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_зсунути_вліво(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_вліво"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_зсунути_вправо(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_вправо"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_зсунути_вправо_2(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_вправо_2"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_двійкове_і(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_двійкове_і"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_двійкове_або(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_двійкове_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_двійкове_виключне_або(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_двійкове_виключне_або"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_двійкове_заперечення(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_двійкове_заперечення"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_менше(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_менше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_більше(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_більше"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_містить(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, аргумент: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_містить"), 1, аргумент::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_числова_негація(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_міснусове"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_отримати_число(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_число"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_збільшити(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_збільшити"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_зменшити(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_зменшити"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_зображення(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_зображення"), 0, пусто, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_текст(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_метод_чародія_текст(М, предмет_буфера, місцезнаходження);
  }

  зовнішня дія предмет_буфера_юнікод(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_метод_чародія_юнікод(М, предмет_буфера, місцезнаходження);
  }

  зовнішня дія предмет_буфера_отримати_байти(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути пусто;
  }

  зовнішня дія предмет_буфера_отримати_буфер(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера як адреса<Предмет>;
  }

  зовнішня дія предмет_буфера_отримати_елемент(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо ключ == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента з буфера має бути числом") як адреса<Предмет>);
    }
    якщо ключ.тип != М.предмет_структури_число {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ отримання елемента з буфера має бути числом") як адреса<Предмет>);
    }
    ціль предмет_числа = ключ як адреса<ПредметЧисла>;
    вернути предмет_буфера_виконати_метод_чародія_отримати_елемент(М, предмет_буфера, предмет_числа, місцезнаходження);
  }

  зовнішня дія предмет_буфера_змінити_елемент(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, ключ: адреса<Предмет>, значення: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    якщо ключ == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ зміни елемента буфера має бути числом") як адреса<Предмет>);
    }
    якщо ключ.тип != М.предмет_структури_число {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Ключ зміни елемента буфера має бути числом") як адреса<Предмет>);
    }
    якщо значення == пусто {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Значення зміни елемента буфера має бути числом") як адреса<Предмет>);
    }
    якщо значення.тип != М.предмет_структури_число {
      вернути результат_стан_падіння(М, місцезнаходження, створити_предмет_тексту(М, "Значення зміни елемента буфера має бути числом") як адреса<Предмет>);
    }
    ціль предмет_числа_ключа = ключ як адреса<ПредметЧисла>;
    ціль предмет_числа_значення = значення як адреса<ПредметЧисла>;
    вернути предмет_буфера_виконати_метод_чародія_змінити_елемент(М, предмет_буфера, предмет_числа_ключа, предмет_числа_значення, місцезнаходження);
  }

  зовнішня дія предмет_буфера_видалити_елемент(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, ключ: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_видалити_елемент"), 1, ключ::адреса як памʼять<адреса<Предмет>>, 0, пусто, місцезнаходження);
  }

  зовнішня дія предмет_буфера_отримати_перебір(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    вернути предмет_буфера_виконати_метод_чародія_перебір(М, предмет_буфера, місцезнаходження);
  }

  зовнішня дія предмет_буфера_отримати_діапазон(М: адреса<Машина>, предмет_буфера: адреса<ПредметБуфера>, включно: логічне, до: адреса<Предмет>, місцезнаходження: Місцезнаходження): предмет_або_стан_падіння {
    ціль аргументи = виділити_памʼять<адреса<Предмет>>(М, 2);
    якщо включно {
      аргументи[0] = М.предмет_логічного_так як адреса<Предмет>;
    } інакше {
      аргументи[0] = М.предмет_логічного_ні як адреса<Предмет>;
    }
    аргументи[1] = до;
    ціль результат = предмет_буфера_виконати_властивість(М, предмет_буфера, назва(М, "чародія_діапазон"), 2, аргументи, 0, пусто, місцезнаходження);
    звільнити_памʼять(М, аргументи);
    вернути результат;
  }
}