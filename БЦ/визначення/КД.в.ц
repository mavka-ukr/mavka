/* КД-Б */

секція КД {
  структура Система;

  структура Система {
    дані: невідома_адреса;
    виділити_сиру_памʼять: (система: адреса<Система>, розмір: позитивне) -> памʼять<п8>;
    перевиділити_сиру_памʼять: (система: адреса<Система>, значення: памʼять<п8>, новий_розмір: позитивне) -> памʼять<п8>;
    звільнити_сиру_памʼять: (система: адреса<Система>, значення: невідома_памʼять) -> ніщо;
  }

  дія виділити<Т>(система: адреса<Система>) -> адреса<Т>;
  дія перевиділити<Т>(система: адреса<Система>, значення: адреса<Т>, кількість: позитивне) -> памʼять<Т>;
  дія звільнити(система: адреса<Система>, значення: невідома_адреса);
  дія виділити_памʼять<Т>(система: адреса<Система>, кількість: позитивне) -> памʼять<Т>;
  дія перевиділити_памʼять<Т>(система: адреса<Система>, значення: памʼять<Т>, кількість: позитивне) -> памʼять<Т>;
  дія звільнити_памʼять(система: адреса<Система>, значення: невідома_памʼять);

  дія виділити<Т>(система: адреса<Система>) -> адреса<Т> {
    вернути система.виділити_сиру_памʼять(система, Т.розмір) як адреса<Т>;
  }

  дія перевиділити<Т>(система: адреса<Система>, значення: адреса<Т>, кількість: позитивне) -> памʼять<Т> {
    вернути система.перевиділити_сиру_памʼять(система, значення як невідома_адреса, кількість * Т.розмір) як памʼять<Т>;
  }

  дія звільнити(система: адреса<Система>, значення: невідома_адреса) {
    система.звільнити_сиру_памʼять(система, значення як невідома_памʼять);
  }

  дія виділити_памʼять<Т>(система: адреса<Система>, кількість: позитивне) -> памʼять<Т> {
    вернути система.виділити_сиру_памʼять(система, кількість * Т.розмір) як памʼять<Т>;
  }

  дія перевиділити_памʼять<Т>(система: адреса<Система>, значення: памʼять<Т>, кількість: позитивне) -> памʼять<Т> {
    вернути система.перевиділити_сиру_памʼять(система, значення як памʼять<п8>, кількість * Т.розмір) як памʼять<Т>;
  }

  дія звільнити_памʼять(система: адреса<Система>, значення: невідома_памʼять) {
    система.звільнити_сиру_памʼять(система, значення);
  }
}

секція КД {
  секція символи {
    стала Нуль = 0;
    стала Один = 1;
    стала Два = 2;
    стала Три = 3;
    стала Чотири = 4;
    стала Пʼять = 5;
    стала Шість = 6;
    стала Сім = 7;
    стала Вісім = 8;
    стала Девʼять = 9;
    стала Велика_буква_А = 10;
    стала Велика_буква_Б = 11;
    стала Велика_буква_В = 12;
    стала Велика_буква_Г = 13;
    стала Велика_буква_Д = 14;
    стала Велика_буква_Е = 15;
    стала Велика_буква_Є = 16;
    стала Велика_буква_Ж = 17;
    стала Велика_буква_З = 18;
    стала Велика_буква_И = 19;
    стала Велика_буква_І = 20;
    стала Велика_буква_Ї = 21;
    стала Велика_буква_Й = 22;
    стала Велика_буква_К = 23;
    стала Велика_буква_Л = 24;
    стала Велика_буква_М = 25;
    стала Велика_буква_Н = 26;
    стала Велика_буква_О = 27;
    стала Велика_буква_П = 28;
    стала Велика_буква_Р = 29;
    стала Велика_буква_С = 30;
    стала Велика_буква_Т = 31;
    стала Велика_буква_У = 32;
    стала Велика_буква_Ф = 33;
    стала Велика_буква_Х = 34;
    стала Велика_буква_Ц = 35;
    стала Велика_буква_Ч = 36;
    стала Велика_буква_Ш = 37;
    стала Велика_буква_Щ = 38;
    стала Велика_буква_Ь = 39;
    стала Велика_буква_Ю = 40;
    стала Велика_буква_Я = 41;
    стала Мала_буква_а = 42;
    стала Мала_буква_б = 43;
    стала Мала_буква_в = 44;
    стала Мала_буква_г = 45;
    стала Мала_буква_д = 46;
    стала Мала_буква_е = 47;
    стала Мала_буква_є = 48;
    стала Мала_буква_ж = 49;
    стала Мала_буква_з = 50;
    стала Мала_буква_и = 51;
    стала Мала_буква_і = 52;
    стала Мала_буква_ї = 53;
    стала Мала_буква_й = 54;
    стала Мала_буква_к = 55;
    стала Мала_буква_л = 56;
    стала Мала_буква_м = 57;
    стала Мала_буква_н = 58;
    стала Мала_буква_о = 59;
    стала Мала_буква_п = 60;
    стала Мала_буква_р = 61;
    стала Мала_буква_с = 62;
    стала Мала_буква_т = 63;
    стала Мала_буква_у = 64;
    стала Мала_буква_ф = 65;
    стала Мала_буква_х = 66;
    стала Мала_буква_ц = 67;
    стала Мала_буква_ч = 68;
    стала Мала_буква_ш = 69;
    стала Мала_буква_щ = 70;
    стала Мала_буква_ь = 71;
    стала Мала_буква_ю = 72;
    стала Мала_буква_я = 73;
    стала Велика_буква_Ґ = 74;
    стала Велика_буква_Ё = 75;
    стала Велика_буква_Ъ = 76;
    стала Велика_буква_Ы = 77;
    стала Велика_буква_Э = 78;
    стала Мала_буква_ґ = 79;
    стала Мала_буква_ё = 80;
    стала Мала_буква_ъ = 81;
    стала Мала_буква_ы = 82;
    стала Мала_буква_э = 83;
    стала Апостроф = 84;
    стала Дволапка = 85;
    стала Лапка = 86;
    стала Косолапка = 87;
    стала І = 88;
    стала Міжкрапка = 89;
    стала Відсоток = 90;
    стала Гривня = 91;
    стала Мітка = 92;
    стала Адреса = 93;
    стала Секція = 94;
    стала Відкрита_квадратна_дужка = 95;
    стала Хрестик = 96;
    стала Закрита_квадратна_дужка = 97;
    стала Відкрита_дужка = 98;
    стала Риска = 99;
    стала Закрита_дужка = 100;
    стала Відкрита_фігурна_дужка = 101;
    стала Зірочка = 102;
    стала Закрита_фігурна_дужка = 103;
    стала Похила = 104;
    стала Стояча = 105;
    стала Обернена_похила = 106;
    стала Менше = 107;
    стала Двориска = 108;
    стала Більше = 109;
    стала Вище = 110;
    стала Гачок = 111;
    стала Нижче = 112;
    стала Надриска = 113;
    стала Хвиляста = 114;
    стала Підриска = 115;
    стала Кома = 116;
    стала Крапка = 117;
    стала Двокрапка = 118;
    стала Крапкакома = 119;
    стала Питання = 120;
    стала Оклик = 121;
    стала Нескінченність = 122;
    стала Інтеграл = 123;
    стала Серце = 124;
    стала Пропуск = 125;
    стала Міжряд = 126;
    стала Дія = 127;
  }

  секція відповідні_символи_юнікоду {
    стала Нуль = 48;
    стала Один = 49;
    стала Два = 50;
    стала Три = 51;
    стала Чотири = 52;
    стала Пʼять = 53;
    стала Шість = 54;
    стала Сім = 55;
    стала Вісім = 56;
    стала Девʼять = 57;
    стала Велика_буква_А = 1040;
    стала Велика_буква_Б = 1041;
    стала Велика_буква_В = 1042;
    стала Велика_буква_Г = 1043;
    стала Велика_буква_Д = 1044;
    стала Велика_буква_Е = 1045;
    стала Велика_буква_Є = 1028;
    стала Велика_буква_Ж = 1046;
    стала Велика_буква_З = 1047;
    стала Велика_буква_И = 1048;
    стала Велика_буква_І = 1030;
    стала Велика_буква_Ї = 1031;
    стала Велика_буква_Й = 1049;
    стала Велика_буква_К = 1050;
    стала Велика_буква_Л = 1051;
    стала Велика_буква_М = 1052;
    стала Велика_буква_Н = 1053;
    стала Велика_буква_О = 1054;
    стала Велика_буква_П = 1055;
    стала Велика_буква_Р = 1056;
    стала Велика_буква_С = 1057;
    стала Велика_буква_Т = 1058;
    стала Велика_буква_У = 1059;
    стала Велика_буква_Ф = 1060;
    стала Велика_буква_Х = 1061;
    стала Велика_буква_Ц = 1062;
    стала Велика_буква_Ч = 1063;
    стала Велика_буква_Ш = 1064;
    стала Велика_буква_Щ = 1065;
    стала Велика_буква_Ь = 1068;
    стала Велика_буква_Ю = 1070;
    стала Велика_буква_Я = 1071;
    стала Мала_буква_а = 1072;
    стала Мала_буква_б = 1073;
    стала Мала_буква_в = 1074;
    стала Мала_буква_г = 1075;
    стала Мала_буква_д = 1076;
    стала Мала_буква_е = 1077;
    стала Мала_буква_є = 1108;
    стала Мала_буква_ж = 1078;
    стала Мала_буква_з = 1079;
    стала Мала_буква_и = 1080;
    стала Мала_буква_і = 1110;
    стала Мала_буква_ї = 1111;
    стала Мала_буква_й = 1081;
    стала Мала_буква_к = 1082;
    стала Мала_буква_л = 1083;
    стала Мала_буква_м = 1084;
    стала Мала_буква_н = 1085;
    стала Мала_буква_о = 1086;
    стала Мала_буква_п = 1087;
    стала Мала_буква_р = 1088;
    стала Мала_буква_с = 1089;
    стала Мала_буква_т = 1090;
    стала Мала_буква_у = 1091;
    стала Мала_буква_ф = 1092;
    стала Мала_буква_х = 1093;
    стала Мала_буква_ц = 1094;
    стала Мала_буква_ч = 1095;
    стала Мала_буква_ш = 1096;
    стала Мала_буква_щ = 1097;
    стала Мала_буква_ь = 1100;
    стала Мала_буква_ю = 1102;
    стала Мала_буква_я = 1103;
    стала Велика_буква_Ґ = 1168;
    стала Велика_буква_Ё = 1025;
    стала Велика_буква_Ъ = 1066;
    стала Велика_буква_Ы = 1067;
    стала Велика_буква_Э = 1069;
    стала Мала_буква_ґ = 1169;
    стала Мала_буква_ё = 1105;
    стала Мала_буква_ъ = 1098;
    стала Мала_буква_ы = 1099;
    стала Мала_буква_э = 1101;
    стала Апостроф = 700;
    стала Дволапка = 34;
    стала Лапка = 39;
    стала Косолапка = 96;
    стала І = 38;
    стала Міжкрапка = 183;
    стала Відсоток = 37;
    стала Гривня = 8372;
    стала Мітка = 35;
    стала Адреса = 64;
    стала Секція = 167;
    стала Відкрита_квадратна_дужка = 91;
    стала Хрестик = 43;
    стала Закрита_квадратна_дужка = 93;
    стала Відкрита_дужка = 40;
    стала Риска = 45;
    стала Закрита_дужка = 41;
    стала Відкрита_фігурна_дужка = 123;
    стала Зірочка = 42;
    стала Закрита_фігурна_дужка = 125;
    стала Похила = 47;
    стала Стояча = 124;
    стала Обернена_похила = 92;
    стала Менше = 60;
    стала Двориска = 61;
    стала Більше = 62;
    стала Вище = 8743;
    стала Гачок = 172;
    стала Нижче = 8744;
    стала Надриска = 175;
    стала Хвиляста = 126;
    стала Підриска = 95;
    стала Кома = 44;
    стала Крапка = 46;
    стала Двокрапка = 58;
    стала Крапкакома = 59;
    стала Питання = 63;
    стала Оклик = 33;
    стала Нескінченність = 8734;
    стала Інтеграл = 8747;
    стала Серце = 10084;
    стала Пропуск = 32;
    стала Міжряд = 10;
    стала Дія = 19;
  }

  структура Місцезнаходження {
    розмір: позитивне;
    дані: памʼять<позитивне>;
    вмісткість: позитивне;
  }

  дія покласти_в_місцезнаходження(система: адреса<Система>, місцезнаходження: адреса<Місцезнаходження>, позиція_місцезнаходження: позитивне) {
    якщо місцезнаходження.розмір == місцезнаходження.вмісткість {
      місцезнаходження.вмісткість += 1;
      місцезнаходження.дані = перевиділити_памʼять<позитивне>(система, місцезнаходження.дані, місцезнаходження.вмісткість);
    }
    місцезнаходження.дані[місцезнаходження.розмір] = позиція_місцезнаходження;
    місцезнаходження.розмір += 1;
  }

  місцева дія дізнатись_розмір_символа_т8(перший_байт: п8) -> п8;
  місцева дія дізнатись_розмір_символа_ю8(перший_байт: п8) -> п8;
  місцева дія отримати_символ_т8_з_ю32(символ_Ю32: п32, вихід_першого_байта: адреса<п8>, вихід_другого_байта: адреса<п8>, вихід_третього_байта: адреса<п8>, вихід_четвертого_байта: адреса<п8>, вихід_розміру: адреса<п8>) -> логічне;
  місцева дія отримати_символ_ю8_з_т32(символ_КД: п32, вихід_першого_байта: адреса<п8>, вихід_другого_байта: адреса<п8>, вихід_третього_байта: адреса<п8>, вихід_четвертого_байта: адреса<п8>, вихід_розміру: адреса<п8>) -> логічне;
  місцева дія порахувати_розмір_ю8сі(значення: памʼять<п8>) -> позитивне;
  місцева дія порахувати_розмір_ю32сі(значення: памʼять<п32>) -> позитивне;
  місцева дія порахувати_розмір_т8сі(значення: памʼять<п8>) -> позитивне;
  місцева дія порахувати_розмір_т32сі(значення: памʼять<п32>) -> позитивне;
  місцева дія перевірити_чи_ю8_рівні(а: ю8, б: ю8) -> логічне;
  місцева дія перевірити_чи_ю32_рівні(а: ю32, б: ю32) -> логічне;
  місцева дія перевірити_чи_т8_рівні(а: т8, б: т8) -> логічне;
  місцева дія перевірити_чи_т32_рівні(а: т32, б: т32) -> логічне;
  місцева дія перекодувати_ю8_в_т8(система: адреса<Система>, вхід: ю8, екранувати_невідомі: логічне, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<т8>, вихід_позиції_помилки: адреса<позитивне>) -> логічне;
  місцева дія перекодувати_ю8_в_ю32(система: адреса<Система>, вхід: ю8, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<ю32>, вихід_позиції_помилки: адреса<позитивне>) -> логічне;
  місцева дія перекодувати_ю32_в_ю8(система: адреса<Система>, вхід: ю32, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<ю8>, вихід_позиції_помилки: адреса<позитивне>) -> логічне;
  місцева дія перекодувати_т8_в_ю8(система: адреса<Система>, вхід: т8, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<ю8>, вихід_позиції_помилки: адреса<позитивне>) -> логічне;
  місцева дія перекодувати_ю8_в_т8_з_місцезнаходженнями(система: адреса<Система>, вхід: ю8, екранувати_невідомі: логічне, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<т8>, вихід_місцезнаходжень: адреса<Місцезнаходження>, вихід_позиції_помилки: адреса<позитивне>) -> логічне;
  місцева дія перекодувати_т8_в_ю8_з_місцезнаходженнями(система: адреса<Система>, вхід: т8, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<ю8>, вихід_місцезнаходжень: адреса<Місцезнаходження>, вихід_позиції_помилки: адреса<позитивне>) -> логічне;

  місцева дія обробити_екранізації_в_т8(система: адреса<Система>, вхід: т8, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<т8>) -> логічне;
  місцева дія обробити_екранізації_в_ю8(система: адреса<Система>, вхід: ю8, з_нульовим_байтом_в_кінці: логічне, вихід: адреса<ю8>) -> логічне;
}